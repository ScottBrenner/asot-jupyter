{
  
    
        "post0": {
            "title": "Analyzing the ASOT Top 1000",
            "content": "Introduction . To celebrate the 1,000th episode of A State of Trance the radioshow invited viewers to vote for their all-time favorite trance tracks, and the resulting list was broadcast as ASOT 1000. . In this post we&#39;ll analyze the top 1,000 - which artists, BPMs, and years are most-represented? And more! . Some Housekeeping . As with previous posts here, we&#39;ll be pulling data from Spotify and graphing the results. While there is an official &quot;ASOT Top 1000&quot; playlist on Spotify, I&#39;m opting to instead use the &quot;ASOT TOP 1000 Countdown Extended&quot; playlist compiled by reddit user turbodevin. As Devin writes, . I used a filler track (4 seconds) for the missing song, to keep the song numbers corresponding to the ranking. When an extended version was not available, a shorter version is used. When a remix is not available, the regular version is used when available. MISSING . 531 || Sean Callery - The Longest Day (Armin van Buuren Remix) . REMIX NOT AVAILABLE . 414 || Faithless - Insomnia (Andrew Rayel Remix) . 520 || Safri Duo - Played A Live (The Bongo Song) [NWYR &amp; Willem de Roo Remix] . 530 || Kensington - Sorry (Armin van Buuren Remix) . 635 || Ilse de Lange - The Great Escape (Armin van Buuren Remix) . 661 || Zedd feat. Foxes - Clarity (Andrew Rayel Remix) . While the playlist may not be complete, I&#39;d still consider to be the most-complete playlist available on Spotify - using extended mixes over the official playlist&#39;s radio mixes is certainly more preferrable, at least. . Remember, all data here is pulled directly from Spotify&#39;s API without any modification from my end. See the post on Methodology for details on what data we can pull from Spotify, and how. Notably, Spotify&#39;s AudioFeaturesObject lists tempo as &quot;overall estimated tempo of a track in beats per minute (BPM)&quot; - keyword being estimate. I&#39;ve done little to account for any inconsistencies and nothing to address them! Spotify&#39;s API for &quot;Get a Playlist&#39;s Items&quot; limits us to getting 100 tracks at a time. Let&#39;s make 10 API calls for 100 tracks each, incrementing offset each time, and save the results. . &quot;&quot;&quot; User: https://open.spotify.com/user/113444659 Playlist: ASOT TOP 1000 Countdown Extended Playlist link: https://open.spotify.com/playlist/5DCcjCLMlPjTwKLCcYyzIj Playlist ID: 5DCcjCLMlPjTwKLCcYyzIj &quot;&quot;&quot; top_1000_playlist = &#39;5DCcjCLMlPjTwKLCcYyzIj&#39; top_1000_tracks = [] # Get full details of the tracks and episodes of a playlis # https://spotipy.readthedocs.io/en/2.16.1/#spotipy.client.Spotify.playlist_items top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=100)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=200)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=300)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=400)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=500)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=600)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=700)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=800)[&#39;items&#39;]) top_1000_tracks.extend(sp.playlist_tracks(top_1000_playlist, offset=900)[&#39;items&#39;]) print(len(top_1000_tracks)) . 1000 . What&#39;s number 1? . print(top_1000_tracks[999][&#39;track&#39;][&#39;artists&#39;][0][&#39;name&#39;], &#39;-&#39;, top_1000_tracks[999][&#39;track&#39;][&#39;name&#39;]) . Armin van Buuren - Shivers . Artists . Let&#39;s begin by looking at the artists who made the top 1000 - how many unique artists were featured? . unique_artists = set() for track in top_1000_tracks: for artist in track[&#39;track&#39;][&#39;artists&#39;]: unique_artists.add(artist[&#39;name&#39;]) print(len(unique_artists)) . 639 . Which artists were featured the most? . from collections import defaultdict artist_counter = defaultdict(int) for track in top_1000_tracks: for artist in track[&#39;track&#39;][&#39;artists&#39;]: artist_counter[artist[&#39;name&#39;]] += 1 top_artists = sorted(artist_counter.items(), key=lambda k_v: k_v[1], reverse=True) . Alright, let&#39;s see the top 25 in a graph.. . source = pd.DataFrame.from_dict(top_artists[:25]) bars = alt.Chart(source).mark_bar().encode( x=alt.X(&#39;1:Q&#39;, title=&#39;Plays&#39;), y=alt.Y(&#39;0:N&#39;, sort=&#39;-x&#39;, title=&#39;Artist&#39;) ).properties( title=&quot;ASOT Top 1000 - Most-played artists&quot;, width=600 ) text = bars.mark_text( align=&#39;left&#39;, baseline=&#39;middle&#39;, dx=3 # Nudges text to right so it doesn&#39;t appear on top of the bar ).encode( text=&#39;1:Q&#39; ) bars + text . No surprise at who the #1 is, but the sheer number of their tracks featured is pretty impressive - over 10% of the ASOT Top 1000 was produced by Armin van Buuren, more than twice the number of the second-most featured artist! . Which artists were featured exactly once, with what track, at what position? . # Find all artists with one play, then find that track in the top 1000 for artist in top_artists: if artist[1] == 1: for position, track in enumerate(top_1000_tracks): if track[&#39;track&#39;][&#39;artists&#39;][0][&#39;name&#39;] == artist[0]: print(1000 - position, &#39;.&#39;, track[&#39;track&#39;][&#39;artists&#39;][0][&#39;name&#39;], &#39;-&#39;, track[&#39;track&#39;][&#39;name&#39;]) . 997 . ATN - Miss A Day - Original Mix 996 . Late Night Alumni - Empty Streets - Lum√Øsade Balearic Mix 993 . Ron van den Beuken - Timeless - Ron van den Beuken Remix 992 . Greg Downey - These Hands I Hold - Sean Tyas Remix 991 . M.I.K.E. - Chocolate Infusion - Original Mix 989 . Adam Nickey - Never Gone - Original Mix [Above &amp; Beyond Respray] 987 . Salt Tank - Eugina - Michael Woods Remix 981 . A Force - Crystal Dawn [ASOT 254] - A Tribute To &#39;99 Remix 969 . Myon &amp; Shane 54 - Ibiza Sunrise - Classic Dub 967 . Neptune Project - Aztec - Original Mix 964 . Ava Mea - In The End - Original Mix 963 . Rodg - High On Life - Extended Mix 962 . Midway - Monkey Forest - Original Mix Edit 961 . Ramin Djawadi - Game Of Thrones Theme - Armin van Buuren Extended Remix 960 . Filterheadz - Yimanya - Original Mix 950 . Jody Wisternoff - The Bridge - Chicane Rework 943 . Probspot - Foreplay - Original Mix 940 . Selu Vibra - Stargazing [ASOT 224] - Original Mix 928 . Ernesto vs. Bastian - Dark Side Of The Moon - Original Extended 927 . Sensation - The Anthem 2003 - Original Mix 922 . Space RockerZ - Puzzle Piece - Daniel Heatcliff&#39;s Farewell Remix 911 . Sunset Bros - I&#39;m Feeling It (In The Air) - Sunset Bros X Mark McCabe / MaRLo Remix 906 . Avao - Cosmic Order - Extended Mix 902 . Elysian - Beyond The Comfort Zone - Extended Mix 901 . Lemon - Anticipation 899 . Luigi Lusini - Who We Are 897 . Thomas Bronzwaer - Shadow World - Original Mix 896 . Shane - Too Late To Turn - Armin Van Buuren Remix 887 . Niels Van Gogh - Pulverturm (Original) 884 . Swedish House Mafia - One 883 . Monogato - Miami Vibe - Omnia Remix 879 . Eximinds - Lacrimosa - Extended Mix 855 . Full Tilt - Surrender - Sneijder vs John O&#39;Callaghan Remix 854 . Carl B. - Social Suicide [ASOT 261] - Original Mix 853 . Tinlicker - Sleepwalker - Extended Mix 851 . Cass - Perception - New Vocal Mix 850 . Bjorn Akesson - Painting Pyramids - Original Mix 848 . Frank T.R.A.X. - Nebuchan - Radion6 Extended Remix 844 . Easton - Healing Rain - Bryan Kearney Remix 843 . Arisen Flame - Explorer - Original Mix 841 . Astrix - Deep Jungle Walk 840 . Sodality - Challenger - Extended Mix 834 . Hazem Beltagui - We Are - Original Mix 830 . 3LAU - Tokyo (feat. XIRA) - Fatum Remix 828 . The Space Brothers - Shine - Jorn van Deynhoven Extended Remix 822 . Ferry Corsten&#39;s Countdown - More Than Anything (Listener&#39;s Choice) (CC489) - Stoneface &amp; Terminal Remix 821 . Simon O&#39;Shine &amp; Adam Navel - Marathon - Simon O&#39;Shine Mix 819 . Humate - Love Stimulation - Love-Club-Mix 813 . A &amp; Z - Fleeting Moments - Original Mix 810 . Abstract Vision - Conqueror - Original Mix 798 . Arctic Quest - Renaissance - Original Mix 797 . K90 - Red Snapper - Allen Watts Extended Remix 796 . Ali Wilson - Pandora - Original 790 . Fragile - Inertia - Armin Van Buuren Remix 783 . Audien - Wayfarer - Original Mix 778 . Holden - Nothing - 93 Returning Remix 777 . Art Of Trance - Madagascar - Ferry Corsten Remix 773 . Synergy - Hello Strings - Original Mix 771 . Jase Thirlwall - Dust - Extended Mix 770 . Antillas - Damaged - Main Mix 768 . Coast 2 Coast - Home - Original Mix 760 . Hammer - Language - Santiago Nino Dub Tech Mix 759 . Nuera - Green Cape Sunset - Original Mix 748 . Riva - Time Is The Healer - Armin van Buuren Extended Dub 747 . Joop - The Future - Original Mix 733 . Jeremy Vancaulart - Hurt - Extended Mix 714 . Randy Katana - In Silence - Txitxarro Mix 712 . London Grammar - Hey Now - Arty Remix 711 . Parker &amp; Hanson - Gravity - Original Mix 710 . Claudia Cazacu - Freefalling - Original Mix 709 . Dutch Force - Deadline - Original Mix 703 . Fragma - Toca Me - Inpetto 2008 Mix 702 . James Dymond - Spectrum - Extended Mix 701 . DRYM - Smile - Extended Mix 698 . Peter Martin - Perfect Wave - Original Mix 696 . Active Sight - Out Of Our Lives - Original Mix 694 . Glenn Morrison - Contact 687 . Zirenz - Edge of Space Ultimate - Whiteroom Remix 684 . 7 Skies - Central Park - Original Mix 683 . Filo &amp; Peri - Anthem - Original Radio Version 682 . Carl B - All Day - Original 678 . Dimitri Vegas &amp; Like Mike - Repeat After Me - Extended Mix 672 . Aria - Dido - Armin Van Buuren&#39;s Universal Religion Mix 670 . Perry O&#39;Neil - Wave Force - Original Mix 669 . Dumonde - Never Look Back - Full On Vocal Mix 665 . Jon O&#39;Bir - Found A Way (feat. Fisher) - Joint Operations Centre Remix 657 . Cressida - 6AM - Kyau &amp; Albert Update 655 . Zoo Brazil - You Can Have It All - George Acosta Remix 650 . PRAANA - Kaleidoscope - Extended Mix 647 . Bedrock - Heaven Scent - Original Mix 643 . Eco - A Million Sounds, A Thousand Smiles - Original Mix 641 . Ultra Shock - The Sound Of E - Jorn van Deynhoven Extended Remix 635 . Ilse DeLange - The Great Escape 621 . Mauro Picotto - Lizard - Cosmic Gate Extended Remix 612 . Monolink - Return to Oz - ARTBAT Remix 607 . Karen Overton - Your Loving Arms - Club Mix 596 . Primer - Everlast - Original Mix 587 . Age Of Love - The Age Of Love - Jam &amp; Spoon Watch Out For Stella Mix 584 . Ascension - Someone - Giuseppe Ottaviani Extended Remix 583 . Masters &amp; Nickson - Out There - Robert Nickson 2016 Extended Remix 581 . GTR - Mistral 580 . Tim Berg - Bromance - Avicii‚Äôs Arena Mix 571 . Jan Johnston - Flesh - DJ Tiesto Mix 567 . Artento Divini - A.D.D.A. - Extended Mix 566 . Freefall - Skydive 554 . Beatsole - Before I Wake - Extended Mix 553 . The Noble Six - Firewalker - Extended Mix 549 . Electrovoya - Effervesce 542 . Tillmann Uhrmacher - On the Run - Ocean to Shore Club Extended 538 . Chakra - Home - Above &amp; Beyond Mix 532 . Members Of Mayday - 10 In 01 - Paul Van Dyk Club Mix 531 . Kyuss - Yeah 526 . Ohmna - Key Of Life - MaRLo Remix 520 . Safri Duo - Played-A-Live (The Bongo Song) 511 . Chris Lake - Carry Me Away (feat. Emma Hewitt) 508 . Ayla - Ayla - Ben Nicky &amp; Luke Bond Remix 507 . Michael Dow - Ascent 505 . Afternova - Serenity - Andy Blueman Remix 499 . York - The Reachers of Civilisation 488 . Conjure One - Tears From The Moon - Ti√´sto In Search Of Sunrise Remix 485 . Paul Webster - Time - Sean Tyas Dub Mix 481 . 3rd Moon - Monsun - Original Mix 480 . Solid Sessions - Janeiro - Armin van Buuren Remix 478 . Quench - Dreams - Nicholson&#39;s Extended Cathedral Remix 472 . Insigma - Open Our Eyes - Original Mix 467 . VER:WEST - 5 Seconds Before Sunrise 465 . Moogwai - Viola - Armin van Buuren Remix 458 . Albert Vorne - Formentera What - Gareth Emery Remix 457 . Vast Vision - Everything - Aly &amp; Fila Remix 451 . Phynn - Lucid 440 . Fred Baker - Confirmation 438 . Tilt - The World Doesn&#39;t Know - Original Mix 435 . Cerf, Mitiska &amp; Jaren - You Never Said - Dash Berlin Remix 434 . Triple A - Winter Stayed - Armin van Buuren&#39;s On the Beach Mix 433 . XiJaro &amp; Pitch - Whispers Of Time - Extended Mix 417 . 16BL - Chant A Tune - Jeremy Olander Remix 399 . 2nd Phase - Never Come Down - Norin &amp; Rad Remix 392 . Matlock - Deep Psychosis - Daniel Kandi&#39;s Cure Mix 387 . Wiegel Meirmans Snitker - Nova Zembla - Armin van Buuren Extended Remix 386 . Graham Bell - The Sound Of Letting Go (Tribute To Yotam) - Extended Mix 385 . Hans Zimmer - He&#39;s A Pirate - Ti√´sto Orchestral Mix 380 . Atlantis - Fiji - ReOrder Extended Remix 374 . Svenson &amp; Gielen - Twisted - Original Mix 371 . Galen Behr - Carabella - Galen Behr vs Orjan Nilsen Extended Remix 370 . 8 Wonders - The Morning After - The Thrillseekers Remix 369 . Basic Dawn - Pure Thrust - NU NRG Remix 355 . Nalin &amp; Kane - Beachball - Original Club Mix 342 . Rex Mundi - Nothing At All - Original Mix 323 . L.S.G. - Netherworld - Oliver Prime Remix 321 . DJ&#39;s United - Remember Love - Original Mix 301 . M.I.D.O.R. &amp; Six4eight - No Man&#39;s Land 294 . KhoMha - Tierra - Extended Mix 273 . Jean-Michel Jarre - Stardust 271 . DJ Aligator - The Perfect Match - Club Mix 270 . Akesson - Perfect Blue - Original Mix 255 . iio - Rapture (Armin Van Buuren Remix Remastered) [feat. Nadia Ali] 243 . Headstrong - Tears - Aurosonic Progressive Mix 241 . Pulser - My Religion - Original Mix 236 . Major League - Wonder Where You Are? 233 . Sasha - Xpander 228 . Alt+F4 - Alt+F4 - Original Mix 222 . Ridgewalkers - Find - Andy Moor Remix 217 . Eyal Barkan - Voyage - Magikal Remake 184 . The Doppler Effect - Beauty Hides In The Deep - John O&#39;Callaghan Extended 183 . FUTURECODE - Dancing In The Rain - Extended Mix 177 . Ayumi Hamasaki - M - Above &amp; Beyond Remix 170 . Sonic Inc - The Taste Of Summer - Fire &amp; Ice Vital Remix 167 . Darude - Sandstorm 147 . Salt Lake - Rendezvous - Original Mix 120 . Darren Tate - Let The Light Shine In - 12&#39;&#39; Original Mix 113 . William Orbit - Barber&#39;s Adagio for Strings - Ferry Corsten Remix 110 . Yuri Kane - Right Back - Original Extended 104 . Sergey Nevone - Apprehension - Aly &amp; Fila Mix 80 . Reflekt - Need To Feel Loved - Thrillseekers Remix 71 . Binary Finary - 1998 - Gouryella Remix 70 . Planet Perfecto Knights - Resurection 59 . Arksun - Arisen - Original Mix 54 . Saltwater - The Legacy - Alphazone Extended Remix 44 . Energy 52 - Caf√© Del Mar - Three &#39;n One Remix 43 . Luminary - Amsterdam - Smith &amp; Pledger Remix 37 . Key4050 - I Love You - Extended Mix 33 . Robert Miles - Children - Dream Version 21 . Veracocha - Carte Blanche - Original Mix 18 . Motorcycle - As The Rush Comes - Gabriel &amp; Dresden Sweeping Strings Mix 4 . Delerium - Silence (feat. Sarah McLachlan) - DJ Ti√´sto&#39;s in Search of Sunrise Remix . . Quite a few, click &quot;Show Output&quot; above to view! Note that we&#39;re only listing the artist on the track credits that&#39;s only featured on that track. For example, &quot;120. Darren Tate &amp; Jono Grant ‚Äì Shine (Let The Light Shine In)&quot; is listed here but lists only Darren Tate as the producer because Jono Grant also appears in &quot;562. Jono Grant vs Mike Koglin ‚Äì Circuits&quot;. . Tracks . Let&#39;s looks at some track-specific numbers now. . In which years were the tracks produced? . annual_total = defaultdict(int) for track in top_1000_tracks: annual_total[track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4]] += 1 top_years = sorted(annual_total.items(), key=lambda k_v: k_v[1]) print(top_years) . [(&#39;1992&#39;, 1), (&#39;1995&#39;, 1), (&#39;1997&#39;, 2), (&#39;1996&#39;, 5), (&#39;1998&#39;, 5), (&#39;1999&#39;, 7), (&#39;2002&#39;, 12), (&#39;2001&#39;, 14), (&#39;2000&#39;, 18), (&#39;2003&#39;, 23), (&#39;2004&#39;, 25), (&#39;2005&#39;, 32), (&#39;2006&#39;, 37), (&#39;2007&#39;, 38), (&#39;2008&#39;, 45), (&#39;2017&#39;, 49), (&#39;2015&#39;, 50), (&#39;2014&#39;, 54), (&#39;2020&#39;, 55), (&#39;2016&#39;, 55), (&#39;2010&#39;, 56), (&#39;2009&#39;, 62), (&#39;2013&#39;, 64), (&#39;2018&#39;, 64), (&#39;2011&#39;, 66), (&#39;2012&#39;, 68), (&#39;2019&#39;, 92)] . In a graph: . source = pd.DataFrame.from_dict(top_years) bars = alt.Chart(source).mark_bar().encode( x=alt.X(&#39;1:Q&#39;, title=&#39;Plays&#39;), y=alt.Y(&#39;0:N&#39;, sort=&#39;-x&#39;, title=&#39;Year&#39;) ).properties( title=&quot;ASOT Top 1000 - Most-represented years&quot;, width=600 ) text = bars.mark_text( align=&#39;left&#39;, baseline=&#39;middle&#39;, dx=3 # Nudges text to right so it doesn&#39;t appear on top of the bar ).encode( text=&#39;1:Q&#39; ) bars + text . Might be better to see it sorted by year: . source = pd.DataFrame.from_dict(top_years) bars = alt.Chart(source).mark_bar().encode( x=alt.X(&#39;1:Q&#39;, title=&#39;Plays&#39;), y=alt.Y(&#39;0:N&#39;, title=&#39;Year&#39;) ).properties( title=&quot;ASOT Top 1000 - Yearly representation&quot;, width=600 ) text = bars.mark_text( align=&#39;left&#39;, baseline=&#39;middle&#39;, dx=3 # Nudges text to right so it doesn&#39;t appear on top of the bar ).encode( text=&#39;1:Q&#39; ) bars + text . What are the oldest tracks in the list? Sorted by position. . for position, track in enumerate(top_1000_tracks): if int(track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4]) &lt; 2000: track_artist = track[&#39;track&#39;][&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;track&#39;][&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] print(1000 - position, &#39;.&#39;, track_artist, &#39;-&#39;, track[&#39;track&#39;][&#39;name&#39;], &#39;- released&#39;, track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;]) . 983 . Vincent de Moor - Flowtation - released 1996-01-01 887 . Niels Van Gogh - Pulverturm (Original) - released 1998-09-21 691 . Lost Witness &amp; Lange - Happiness Happening - Lange Remix - released 1999-03-22 647 . Bedrock - Heaven Scent - Original Mix - released 1999-12-01 638 . Agnelli &amp; Nelson - El Ni√±o - released 1998-08-01 566 . Freefall - Skydive - released 1998-01-01 531 . Kyuss - Yeah - released 1992-01-01 499 . York - The Reachers of Civilisation - released 1999-10-20 414 . Faithless &amp; Rollo Armstrong &amp; Sister Bliss - Insomnia - released 1996 355 . Nalin &amp; Kane - Beachball - Original Club Mix - released 1997-01-01 233 . Sasha - Xpander - released 1999-07-05 167 . Darude - Sandstorm - released 1999-01-01 127 . Three Drives On A Vinyl - Greece 2000 - Original Mix - released 1997-06-01 125 . ATB - 9 Pm - Till I Come - released 1998-10-26 113 . William Orbit &amp; Ferry Corsten - Barber&#39;s Adagio for Strings - Ferry Corsten Remix - released 1995-01-17 99 . Armin van Buuren - Blue Fear - Original Mix - released 1996-03-10 91 . Cygnus X &amp; Rank 1 - Superstring - Rank 1 Remix - released 1996 87 . Solarstone &amp; Armin van Buuren - Seven Cities - Armin van Buuren Remix - released 1999-06-04 71 . Binary Finary &amp; Gouryella - 1998 - Gouryella Remix - released 1998 33 . Robert Miles - Children - Dream Version - released 1996-07-16 21 . Veracocha - Carte Blanche - Original Mix - released 1999-05-01 . A lot of tracks released in 2020 made the list, what are the most recent? Here&#39;s the tracks in the months leading up to the end of the year. . for position, track in enumerate(top_1000_tracks): if track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:7] == &#39;2020-09&#39; or track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:7] == &#39;2020-10&#39; or track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:7] == &#39;2020-11&#39; or track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:7] == &#39;2020-12&#39;: track_artist = track[&#39;track&#39;][&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;track&#39;][&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] print(1000 - position, &#39;.&#39;, track_artist, &#39;-&#39;, track[&#39;track&#39;][&#39;name&#39;], &#39;- released&#39;, track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;]) . 915 . Assaf &amp; Cassandra Grey - Lost At Sea - released 2020-12-11 893 . Cosmic Gate &amp; Andrew Bayer - The Launch - Extended Mix - released 2020-09-04 863 . ARTY &amp; NK - Who Am I - released 2020-11-27 836 . Allen Watts &amp; Gid Sedgwick - Another You - Extended Mix - released 2020-09-11 824 . Giuseppe Ottaviani &amp; Sue McLaren - Not One Goodbye - Extended Mix - released 2020-09-25 446 . Above &amp; Beyond &amp; Zo√´ Johnston &amp; Kyau &amp; Albert - You Got To Go - Kyau &amp; Albert Extended Mix - released 2020-10-01 205 . Aly &amp; Fila &amp; Plumb - Somebody Loves You - Extended Mix - released 2020-09-25 . In which years were the tracks produced by the top five most-played artists produced? . artist_avb_counter = defaultdict(int) # Tracks crediting Armin van Buuren artist_ab_counter = defaultdict(int) # Tracks crediting Above &amp; Beyond artist_af_counter = defaultdict(int) # Tracks crediting Aly &amp; Fila artist_fc_counter = defaultdict(int) # Tracks crediting Ferry Corsten artist_ar_counter = defaultdict(int) # Tracks crediting Andrew Rayel for track in top_1000_tracks: for artist in track[&#39;track&#39;][&#39;artists&#39;]: if artist[&#39;name&#39;] == &quot;Armin van Buuren&quot;: artist_avb_counter[track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4]] += 1 elif artist[&#39;name&#39;] == &quot;Above &amp; Beyond&quot;: artist_ab_counter[track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4]] += 1 elif artist[&#39;name&#39;] == &quot;Aly &amp; Fila&quot;: artist_af_counter[track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4]] += 1 elif artist[&#39;name&#39;] == &quot;Ferry Corsten&quot;: artist_fc_counter[track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4]] += 1 elif artist[&#39;name&#39;] == &quot;Andrew Rayel&quot;: artist_ar_counter[track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4]] += 1 # Sort by year and print the results sorted_avb_years = sorted(artist_avb_counter.items(), key=lambda k_v: k_v[0]) sorted_ab_years = sorted(artist_ab_counter.items(), key=lambda k_v: k_v[0]) sorted_af_years = sorted(artist_af_counter.items(), key=lambda k_v: k_v[0]) sorted_fc_years = sorted(artist_fc_counter.items(), key=lambda k_v: k_v[0]) sorted_ar_years = sorted(artist_ar_counter.items(), key=lambda k_v: k_v[0]) print(&quot;Armin van Buuren:&quot;) print(sorted_avb_years) print(&quot;Above &amp; Beyond:&quot;) print(sorted_ab_years) print(&quot;Aly &amp; Fila:&quot;) print(sorted_af_years) print(&quot;Ferry Corsten:&quot;) print(sorted_fc_years) print(&quot;Andrew Rayel:&quot;) print(sorted_ar_years) . Armin van Buuren: [(&#39;1996&#39;, 1), (&#39;1999&#39;, 1), (&#39;2001&#39;, 1), (&#39;2002&#39;, 3), (&#39;2003&#39;, 4), (&#39;2005&#39;, 3), (&#39;2006&#39;, 5), (&#39;2007&#39;, 1), (&#39;2008&#39;, 8), (&#39;2009&#39;, 6), (&#39;2010&#39;, 13), (&#39;2011&#39;, 5), (&#39;2012&#39;, 6), (&#39;2013&#39;, 17), (&#39;2014&#39;, 3), (&#39;2015&#39;, 10), (&#39;2016&#39;, 6), (&#39;2017&#39;, 7), (&#39;2018&#39;, 7), (&#39;2019&#39;, 16), (&#39;2020&#39;, 3)] Above &amp; Beyond: [(&#39;2003&#39;, 2), (&#39;2004&#39;, 1), (&#39;2005&#39;, 1), (&#39;2006&#39;, 2), (&#39;2007&#39;, 4), (&#39;2008&#39;, 3), (&#39;2009&#39;, 2), (&#39;2010&#39;, 1), (&#39;2011&#39;, 2), (&#39;2012&#39;, 2), (&#39;2013&#39;, 2), (&#39;2014&#39;, 4), (&#39;2015&#39;, 2), (&#39;2016&#39;, 1), (&#39;2017&#39;, 3), (&#39;2018&#39;, 6), (&#39;2019&#39;, 7), (&#39;2020&#39;, 6)] Aly &amp; Fila: [(&#39;2003&#39;, 1), (&#39;2007&#39;, 1), (&#39;2008&#39;, 2), (&#39;2010&#39;, 1), (&#39;2011&#39;, 1), (&#39;2012&#39;, 3), (&#39;2013&#39;, 1), (&#39;2014&#39;, 6), (&#39;2015&#39;, 2), (&#39;2016&#39;, 3), (&#39;2017&#39;, 3), (&#39;2018&#39;, 3), (&#39;2019&#39;, 5), (&#39;2020&#39;, 2)] Ferry Corsten: [(&#39;1995&#39;, 1), (&#39;2002&#39;, 1), (&#39;2007&#39;, 1), (&#39;2008&#39;, 1), (&#39;2009&#39;, 4), (&#39;2011&#39;, 5), (&#39;2012&#39;, 1), (&#39;2013&#39;, 1), (&#39;2015&#39;, 1), (&#39;2016&#39;, 1), (&#39;2018&#39;, 6), (&#39;2019&#39;, 1), (&#39;2020&#39;, 1)] Andrew Rayel: [(&#39;2011&#39;, 1), (&#39;2012&#39;, 4), (&#39;2013&#39;, 4), (&#39;2014&#39;, 4), (&#39;2016&#39;, 1), (&#39;2017&#39;, 2), (&#39;2018&#39;, 3), (&#39;2019&#39;, 2), (&#39;2020&#39;, 4)] . This would look nice in a stacked bar chart, but I couldn&#39;t get the data arranged properly to create the chart. . What&#39;s the average BPM of tracks in the top 1,000? . total_bpm = 0 for track in top_1000_tracks: total_bpm += sp.audio_features(track[&#39;track&#39;][&#39;uri&#39;])[0][&#39;tempo&#39;] print(total_bpm/1000) . 134.03799499999994 . Maybe that&#39;s not so useful. How does the track BPM vary throughout the top 1,000? With #1,000 on the left, down to #1 on the right. . bpm = [] for track in top_1000_tracks: tempo = sp.audio_features(track[&#39;track&#39;][&#39;uri&#39;])[0][&#39;tempo&#39;] if tempo &lt; 100 or tempo &gt; 150: # &quot;outliers&quot;, details below bpm.append(138) else: bpm.append(sp.audio_features(track[&#39;track&#39;][&#39;uri&#39;])[0][&#39;tempo&#39;]) x = np.arange(len(top_1000_tracks)) source = pd.DataFrame({ &#39;track&#39;: x, &#39;bpm&#39;: np.array(bpm) }) source[&#39;138&#39;] = 138 base = alt.Chart(source).mark_line().encode( alt.X(&#39;track&#39;), alt.Y(&#39;bpm&#39;, scale=alt.Scale(domain=(100, 150))), ).properties( title=&quot;ASOT Top 1000 - BPM of track&quot; ) rule = alt.Chart(source).mark_rule(color=&#39;red&#39;).encode( y=&#39;138&#39; ) base + rule . Not the best way to visualize it, how about a semi-interactive scatter plot? Mouseover for track position and BPM, zoom with the mousewheel. I couldn&#39;t figure out how to get track titles and artists in the tooltips. . detail = ( alt.Chart(source) .mark_point() .encode( x=alt.X( &quot;track:T&quot;, ), y=alt.Y( &quot;bpm:Q&quot;, scale=alt.Scale(domain=(100, 150)), ), color=&quot;bpm&quot;, tooltip=[&#39;bpm&#39;, &#39;track&#39;] ) .properties(width=600, height=400, title=&quot;ASOT Top 1000 -- BPM of track&quot;) ).interactive() detail . There&#39;s a few &quot;outliers&quot; that kind of throw off the graph - let&#39;s look at the tracks in the top 1,000 with the lowest and highest BPMs. . for position, track in enumerate(top_1000_tracks): tempo = sp.audio_features(track[&#39;track&#39;][&#39;uri&#39;])[0][&#39;tempo&#39;] if tempo &lt; 125 or tempo &gt; 141: # &quot;outliers&quot; track_artist = track[&#39;track&#39;][&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;track&#39;][&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] print(1000 - position, &#39;.&#39;, track_artist, &#39;-&#39;, track[&#39;track&#39;][&#39;name&#39;], &#39;-&#39;, tempo, &#39;BPM&#39;) . 951 . Hilight Tribe &amp; Vini Vici - Free Tibet - Vini Vici Remix - 103.512 BPM 950 . Jody Wisternoff &amp; Sian Evans - The Bridge - Chicane Rework - 124.998 BPM 917 . Vini Vici &amp; Jean Marie &amp; Hilight Tribe - Moyoni - 103.485 BPM 853 . Tinlicker - Sleepwalker - Extended Mix - 123.997 BPM 716 . Armin van Buuren &amp; Alexander Popov - Popcorn - Extended Mix - 94.915 BPM 711 . Parker &amp; Hanson - Gravity - Original Mix - 123.993 BPM 691 . Lost Witness &amp; Lange - Happiness Happening - Lange Remix - 141.85 BPM 654 . Cygnus X - The Orange Theme - Ferry Corsten&#39;s Moonman Orange Juice Remix - 144.988 BPM 650 . PRAANA &amp; Matt Fax &amp; HALIENE - Kaleidoscope - Extended Mix - 121.983 BPM 635 . Ilse DeLange - The Great Escape - 98.69 BPM 612 . Monolink &amp; ARTBAT - Return to Oz - ARTBAT Remix - 123.998 BPM 531 . Kyuss - Yeah - 0 BPM 467 . VER:WEST &amp; Ti√´sto - 5 Seconds Before Sunrise - 121.997 BPM 432 . Will Atkinson - Telescope - Extended Mix - 142.002 BPM 369 . Basic Dawn &amp; Nu NRG - Pure Thrust - NU NRG Remix - 141.981 BPM 303 . Above &amp; Beyond - Is It Love? (1001) - 124.008 BPM 265 . Rank 1 - Such Is Life - Original Version - 141.063 BPM 262 . Armin van Buuren &amp; Candace Sosa - Runaway - Extended Mix - 124.986 BPM 176 . Above &amp; Beyond - Sun In Your Eyes - Original Mix - 183.967 BPM 97 . John O&#39;Callaghan &amp; Bryan Kearney - Exactly - Original Mix - 142.016 BPM 88 . Giuseppe Ottaviani - Linking People - Original Mix - 143.012 BPM . But this is not entirely right, right? Beatport lists Popcorn as 138 BPM. Again, I&#39;ve done nothing to address any inconsistencies. . Now you! . I&#39;ve hardly covered the most basic analyses, so I&#39;ll leave you with a CSV file of tracks and &quot;audio features&quot; from Spotify so you can run the numbers yourself. . import csv with open(&#39;../data/top-1000.csv&#39;, &#39;w&#39;, newline=&#39;&#39;) as csvfile: topreader = csv.writer(csvfile, delimiter=&#39;,&#39;, quotechar=&#39;|&#39;, quoting=csv.QUOTE_MINIMAL) topreader.writerow([&#39;position&#39;, &#39;artist&#39;, &#39;track&#39;, &#39;year&#39;, &#39;danceability&#39;, &#39;energy&#39;, &#39;key&#39;, &#39;loudness&#39;, &#39;speechiness&#39;, &#39;acousticness&#39;, &#39;instrumentalness&#39;, &#39;liveness&#39;, &#39;valence&#39;, &#39;tempo&#39;, &#39;id&#39;, &#39;uri&#39;, &#39;duration_ms&#39;, &#39;time_signature&#39;]) for position, track in enumerate(top_1000_tracks): # Get track artists track_artist = track[&#39;track&#39;][&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;track&#39;][&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] audio_features = sp.audio_features(track[&#39;track&#39;][&#39;uri&#39;])[0] topreader.writerow([1000 - position, track_artist, track[&#39;track&#39;][&#39;name&#39;], track[&#39;track&#39;][&#39;album&#39;][&#39;release_date&#39;][:4], audio_features[&#39;danceability&#39;], audio_features[&#39;energy&#39;], audio_features[&#39;key&#39;], audio_features[&#39;loudness&#39;], audio_features[&#39;speechiness&#39;], audio_features[&#39;acousticness&#39;], audio_features[&#39;instrumentalness&#39;], audio_features[&#39;liveness&#39;], audio_features[&#39;valence&#39;], audio_features[&#39;tempo&#39;], audio_features[&#39;id&#39;], audio_features[&#39;uri&#39;], audio_features[&#39;duration_ms&#39;], audio_features[&#39;time_signature&#39;]]) . The resulting file can be found in https://github.com/ScottBrenner/asot-jupyter/blob/master/csv/top-1000.csv - let me know what you make with it! .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/bpm/artist/year/2021/01/26/top-1000.html",
            "relUrl": "/asot/bpm/artist/year/2021/01/26/top-1000.html",
            "date": " ‚Ä¢ Jan 26, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Annual Average Episode BPM",
            "content": "Introduction . We&#39;ve previously looked at A State of Trance&#39;s average episode BPM, most-played artists and most-played tracks overall. . Starting with this post we&#39;ll do the same - but looking at things from year-to-year. Let&#39;s begin with annual average episode BPM. . Getting Started . The first episode of A State of Trance aired in 2001. Since then, the show has seen . len(episodes) . 963 . episodes of across its nearly 20-year run. As of writing, according to Spotify, etc .. . As a weekly radio show, I&#39;d expect to see about 52 episodes air each year. Is that correct? . Fortunately Spotify can tell us when an episode aired: . # Air dates for the first 10 episodes for episode in episodes[:10]: print(episode[&#39;name&#39;], episode[&#39;release_date&#39;]) . A State Of Trance Episode 000 2001-05-17 A State Of Trance Episode 001 2001-05-31 A State Of Trance Episode 002 2001-06-07 A State Of Trance Episode 003 2001-06-14 A State Of Trance Episode 004 2001-06-21 A State Of Trance Episode 005 2001-06-28 A State Of Trance Episode 006 2001-07-19 A State Of Trance Episode 007 2001-07-26 A State Of Trance Episode 008 2001-08-02 A State Of Trance Episode 009 2001-08-09 . So we can keep a running tally for each year, then print the result: . from collections import defaultdict episodes_counter = defaultdict(int) for episode in episodes: episodes_counter[episode[&#39;release_date&#39;][:4]] += 1 print(dict(episodes_counter)) . {&#39;2001&#39;: 27, &#39;2002&#39;: 50, &#39;2003&#39;: 50, &#39;2004&#39;: 52, &#39;2005&#39;: 48, &#39;2006&#39;: 50, &#39;2007&#39;: 51, &#39;2008&#39;: 51, &#39;2009&#39;: 51, &#39;2010&#39;: 50, &#39;2011&#39;: 52, &#39;2012&#39;: 51, &#39;2013&#39;: 51, &#39;2014&#39;: 51, &#39;2015&#39;: 52, &#39;2016&#39;: 50, &#39;2017&#39;: 51, &#39;2018&#39;: 52, &#39;2019&#39;: 52, &#39;2020&#39;: 21} . Seems reasonable enough! . Calculating . Let&#39;s crunch some numbers. . What is the annual average episode BPM? . annual_total_bpm = defaultdict(int) annual_avg_bpm = defaultdict(int) for episode in episodes: try: episode_bpm = 0 tracks_counted = 0 for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: episode_bpm += sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;] tracks_counted += 1 episodes_counted += 1 avg = episode_bpm/tracks_counted annual_total_bpm[episode[&#39;release_date&#39;][:4]] += avg except: pass for year, avg in annual_total_bpm.items(): annual_avg_bpm[year] = avg / episodes_counter[year] print(dict(annual_avg_bpm)) . {&#39;2001&#39;: 137.34653042328043, &#39;2002&#39;: 138.77037672527473, &#39;2003&#39;: 137.87648184593183, &#39;2004&#39;: 136.8379514048452, &#39;2005&#39;: 135.9946882254463, &#39;2006&#39;: 136.21986194104406, &#39;2007&#39;: 135.31834901771512, &#39;2008&#39;: 134.5739768988312, &#39;2009&#39;: 134.84276103847634, &#39;2010&#39;: 134.2873634011065, &#39;2011&#39;: 133.38769823050973, &#39;2012&#39;: 133.77641000308137, &#39;2013&#39;: 134.89472557606408, &#39;2014&#39;: 134.62926964078503, &#39;2015&#39;: 133.21748777702336, &#39;2016&#39;: 133.8357659060619, &#39;2017&#39;: 133.83226986060524, &#39;2018&#39;: 132.8617358100079, &#39;2019&#39;: 133.39046580493476, &#39;2020&#39;: 133.46879858547982} . Results . Let&#39;s see what we&#39;ve got! . source = pd.DataFrame([(k, v) for k, v in annual_avg_bpm.items()], columns=[&#39;Year&#39;, &#39;Average Episode BPM&#39;]) source[&#39;138&#39;] = 138 base = alt.Chart(source).mark_line().encode( x=alt.X(&#39;Year&#39;), y=alt.Y(&#39;Average Episode BPM&#39;, scale=alt.Scale(domain=(130, 140))), ).properties( title=&quot;A State of Trance - Annual Average BPM of Episode&quot;, width=600 ) rule = alt.Chart(source).mark_rule(color=&#39;red&#39;).encode( y=&#39;138&#39; ) base + rule . Straightforward enough. In the coming posts we&#39;ll do something similar, looking at the most-played artists and tracks each year. .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/bpm/2020/05/24/annual-avg-bpm.html",
            "relUrl": "/asot/bpm/2020/05/24/annual-avg-bpm.html",
            "date": " ‚Ä¢ May 24, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Track Plays",
            "content": "Introduction . How many unique tracks have been played on A State of Trance over the years? What&#39;s been played the most? . In this post, we&#39;ll examine track plays over time. . Getting Started . First, some baseline analysis. Let&#39;s first figure out how many tracks played on A State of Trance are available on Spotify: . tracks_counted = 0 for episode in episodes: try: for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: tracks_counted += 1 except: pass print(tracks_counted) . 17369 . Wow - 17,000+ total tracks have been played! Remember, as we learned in the &quot;Methodology&quot; post some episodes - especially early ones - are incomplete. . How many unique tracks? Get your regular expressions ready .. . import re unique_tracks = set() for episode in episodes: try: for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: unique_tracks.add(re.sub(&quot;[ ( [].*?[ ) ]]&quot;, &quot;&quot;, track[&#39;name&#39;])) # Remove episode numbers from track names (ex. &#39;Eternity [ASOT 005]&#39;) except: pass print(len(unique_tracks)) . 12722 . As always, this is a &quot;best guess&quot; - an approximation. . Calculating . Let&#39;s crunch some numbers. . Which tracks have the most plays? . from collections import defaultdict tracks_counter = defaultdict(int) for episode in episodes: try: for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: track_artist = track[&#39;artists&#39;][0][&#39;name&#39;] if len(track[&#39;artists&#39;]) &gt; 1: for artist in track[&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] tracks_counter[track_artist + &#39; - &#39; + re.sub(&quot;[ ( [].*?[ ) ]]&quot;, &quot;&quot;, track[&#39;name&#39;])] += 1 except: pass top_tracks = sorted(tracks_counter.items(), key=lambda k_v: k_v[1], reverse=True) . Results . Let&#39;s see what we&#39;ve got! . for track in top_tracks[:25]: print(track) . (&#39;Rising Star - Clear Blue Moon - Original Mix&#39;, 10) (&#39;Gareth Emery &amp; STANDERWICK &amp; HALIENE - Saving Light &#39;, 10) (&#39;Solid Globe - North Pole - Original Mix&#39;, 9) (&#39;Active Sight - The Search For Freedom - Original Mix&#39;, 9) (&#39;EnMass - CQ - Original Mix&#39;, 9) (&#39;Jonas Steur - Castamara - Original Mix&#39;, 9) (&#39;Marco V - Simulated - Original Mix&#39;, 8) (&#39;Rank 1 - Awakening - Original Mix&#39;, 8) (&#39;Solarstone &amp; Scott Bond - 3rd Earth - Original Mix&#39;, 8) (&#39;Pulser - My Religion - Original Mix&#39;, 8) (&#39;Paul van Dyk &amp; Hemstock &amp; Jennings - Nothing But You - Original Mix&#39;, 8) (&#34;Perry O&#39;Neil - Wave Force - Original Mix&#34;, 8) (&#39;Re:Locate - Rogue - Original Mix&#39;, 8) (&#39;Jose Amnesia &amp; Jennifer Rene - Louder - Original Mix&#39;, 8) (&#34;Armin van Buuren &amp; Ana Criado - I&#39;ll Listen - Original Mix&#34;, 8) (&#39;ID - ID &#39;, 8) (&#39;RAM - RAMexico &#39;, 8) (&#39;Cosmic Gate &amp; For√™t - Need To Feel Loved &#39;, 8) (&#39;Solarstone - Seven Cities - Armin van Buuren Remix&#39;, 7) (&#39;Solarstone &amp; Scott Bond - Naked Angel - Original Mix&#39;, 7) (&#39;Roland Klinkenberg - Monday Groove - Original Mix&#39;, 7) (&#39;Solid Globe - Sahara - Original Mix&#39;, 7) (&#39;Adam White &amp; Andy Moor &amp; Whiteroom - The White Room - Original Mix&#39;, 7) (&#39;Robert Gitelman - Children Of The Sun - Original Mix&#39;, 7) (&#39;Interstate - I Found You - Original Mix&#39;, 7) . In a crude graph: . source = pd.DataFrame.from_dict(top_tracks[:25]) bars = alt.Chart(source).mark_bar().encode( x=alt.X(&#39;1:Q&#39;, title=&#39;Plays&#39;), y=alt.Y(&#39;0:N&#39;, sort=&#39;-x&#39;, title=&#39;Track&#39;, axis=alt.Axis(labels=False)), ).properties( title=&quot;A State of Trance - Most-played tracks&quot;, width=500 ) text = alt.Chart(source).mark_text(dx=-350, color=&#39;white&#39;, align=&#39;left&#39;).encode( x=alt.X(&#39;1:Q&#39;, title=&#39;Plays&#39;), y=alt.Y(&#39;0:N&#39;, sort=&#39;-x&#39;), text=alt.Text(&#39;0:N&#39;) ) bars + text .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/tracks/2020/05/16/track-plays.html",
            "relUrl": "/asot/tracks/2020/05/16/track-plays.html",
            "date": " ‚Ä¢ May 16, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Artist Plays",
            "content": "Introduction . How many unique artists have been played on A State of Trance over the years? Who&#39;s been played the most? And the least? . In this post, we&#39;ll examine artist plays over time. . Getting Started . First, some baseline analysis. Let&#39;s first figure out how many tracks played on A State of Trance are available on Spotify: . tracks_counted = 0 for episode in episodes: try: for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: tracks_counted += 1 except: pass print(tracks_counted) . 17311 . Wow - 17,000+ total (not unique) tracks have been played! Remember, as we learned in the &quot;Methodology&quot; post some episodes - especially early ones - are incomplete. . How many unique artists? . unique_artists = set() for episode in episodes: try: for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: for artist in track[&#39;artists&#39;]: unique_artists.add(artist[&#39;name&#39;]) except: pass print(len(unique_artists)) . 4079 . As always, this is a &quot;best guess&quot; - an approximation. . For the sake of tallying unique artists, we are treating collaborators as individuals. A track produced by &quot;Artist A &amp; Artist B&quot; is recorded here as a production by Artist A and Artist B invididually. . Calculating . Let&#39;s crunch some numbers. . Which artists have the most plays? . from collections import defaultdict artist_counter = defaultdict(int) for episode in episodes: try: for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: for artist in track[&#39;artists&#39;]: artist_counter[artist[&#39;name&#39;]] += 1 except: pass top_artists = sorted(artist_counter.items(), key=lambda k_v: k_v[1], reverse=True) . Alright, let&#39;s see the top 25 in a graph.. . source = pd.DataFrame.from_dict(top_artists[:25]) bars = alt.Chart(source).mark_bar().encode( x=alt.X(&#39;1:Q&#39;, title=&#39;Plays&#39;), y=alt.Y(&#39;0:N&#39;, sort=&#39;-x&#39;, title=&#39;Artist&#39;) ).properties( title=&quot;A State of Trance - Most-played artists&quot;, width=600 ) text = bars.mark_text( align=&#39;left&#39;, baseline=&#39;middle&#39;, dx=3 # Nudges text to right so it doesn&#39;t appear on top of the bar ).encode( text=&#39;1:Q&#39; ) bars + text . First place goes to the big man himself of course. Keep in mind we&#39;re counting a remix of an artist&#39;s track as a play for that artist. . From our numbers, a track that credits Armin van Buuren has been played 1210 times across 960 episodes. From this, we can say the average episode of A State of Trance has . top_artists[0][1] / len(episodes) . 1.2604166666666667 . tracks produced by Armin van Buuren in some form or another, which is totally useless to know. . Earlier we found 17,000+ total tracks played from 4000+ unique artists based on what&#39;s currently available on Spotify. How many artists have been played exactly once? . artists_played_once = 0 one_hit_wonders = [] for artist, plays in artist_counter.items(): if plays == 1: one_hit_wonders.append(artist) artists_played_once += 1 print(artists_played_once) . 1769 . Seems like quite a bit, what percentage is that? . print(100 * artists_played_once / len(unique_artists)) . 43.36847266486884 . From the data available on Spotify, we can say 43% of artists played on A State of Trance were played exactly once. A full list of artists played once appears below: . print(sorted(one_hit_wonders)) . [&#39;16BL&#39;, &#39;2Symmetry&#39;, &#39;3 Amigos&#39;, &#39;3 Colours&#39;, &#39;3 Of Life&#39;, &#39;4 Mal&#39;, &#39;4Mal&#39;, &#39;7 Baltic&#39;, &#39;8.02&#39;, &#39;A Lost Connection&#39;, &#39;A&amp;Z&#39;, &#39;AA Meeting&#39;, &#39;ABHISHEK Y2V&#39;, &#39;AMTM&#39;, &#39;ANDO&#39;, &#39;ANIMA!&#39;, &#39;ANUQRAM&#39;, &#39;ANVY&#39;, &#39;ASCO&#39;, &#39;ATHOM&#39;, &#39;ATN&#39;, &#39;AWD&#39;, &#39;Abaze&#39;, &#39;Abraham Leoga&#39;, &#39;Ace Ventura&#39;, &#39;Active State&#39;, &#39;Adagio Sensus&#39;, &#39;Adaja&#39;, &#39;Adam Coppack&#39;, &#39;Adam Deane&#39;, &#39;Adam K &amp; Soha&#39;, &#39;Adam Lambert&#39;, &#39;Adam Lavel&#39;, &#39;Adam Lindburg&#39;, &#39;Adam Sheridan&#39;, &#39;Adam Sky&#39;, &#39;Adam Sobiech&#39;, &#39;Adam Tas&#39;, &#39;Adiva&#39;, &#39;Adrian Blue&#39;, &#39;Adrian Font&#39;, &#39;Adrian&amp;Raz&#39;, &#39;Adriana Thorpe&#39;, &#39;Advanced&#39;, &#39;Adymus&#39;, &#39;Aero 21&#39;, &#39;Aether&#39;, &#39;After Midnight&#39;, &#39;AfterU&#39;, &#39;Against The Grain&#39;, &#39;Aguada&#39;, &#39;Ahmed Atef&#39;, &#39;Ahorn&#39;, &#39;Aiden Arie&#39;, &#39;Aiera &amp; Osiris&#39;, &#39;Aimo&#39;, &#39;AirLab7&#39;, &#39;Airsun&#39;, &#39;Airtight&#39;, &#39;Airway 7&#39;, &#39;Aisling Jarvis&#39;, &#39;Aki Bergen &amp; Richter&#39;, &#39;Akku&#39;, &#39;Aknael &amp; Bekeela&#39;, &#39;Aknow&#39;, &#39;Alae Khaldi&#39;, &#39;Alan Banks&#39;, &#39;Alan Stott&#39;, &#39;Alan Wyse&#39;, &#39;Albert Keyn&#39;, &#39;Albion&#39;, &#39;Alco Rhyhtm&#39;, &#39;Aldo Henrycho&#39;, &#39;Aleksey Gunichev&#39;, &#39;Aleksey Sladkov&#39;, &#39;Alex&#39;, &#39;Alex Arestegui&#39;, &#39;Alex Djohn&#39;, &#39;Alex Fisher&#39;, &#39;Alex Humphreys&#39;, &#39;Alex John&#39;, &#39;Alex M.O.R.P.H. &amp; RAM&#39;, &#39;Alex M.O.R.P.H. feat. Sylvia Tosun&#39;, &#39;Alex Piletski&#39;, &#39;Alex Staltari&#39;, &#39;Alex Wackii&#39;, &#39;AlexMo&#39;, &#39;Alexan&#39;, &#39;Alexander Chekomasov&#39;, &#39;Alhena&#39;, &#39;Alias&#39;, &#39;Alice Berg&#39;, &#39;Alicia Madison&#39;, &#39;Alikast&#39;, &#39;Allam&#39;, &#39;Allan Morrow&#39;, &#39;Allen&#39;, &#39;Allen Belg&#39;, &#39;Allende&#39;, &#39;Allion&#39;, &#39;All√©&#39;, &#39;Almar&#39;, &#39;Alter Breed&#39;, &#39;Alucard&#39;, &#39;Alvin&#39;, &#39;Alyx Ander&#39;, &#39;Amanda Jamison&#39;, &#39;Amax DJ&#39;, &#39;Amba Sheperd&#39;, &#39;Ambassador&#39;, &#39;Ameera&#39;, &#39;Amersy&#39;, &#39;Amir Atme&#39;, &#39;Amo R&#39;, &#39;Amy J Price&#39;, &#39;Analogue Sound Department&#39;, &#39;Anbass&#39;, &#39;Ancient Mind&#39;, &#39;Anden&#39;, &#39;Anden State&#39;, &#39;Anders Duvald&#39;, &#39;Andre Sobota&#39;, &#39;Andrea Faustinelli&#39;, &#39;Andrea Saenz&#39;, &#39;Andretta&#39;, &#39;Andrew Benson&#39;, &#39;Andrew Candid&#39;, &#39;Andrew Cash&#39;, &#39;Andrew Henry&#39;, &#39;Andrew Langston&#39;, &#39;Andrew Mirt&#39;, &#39;Andrew Vass&#39;, &#39;Andrey Pashkov&#39;, &#39;Andr√©&#39;, &#39;Andr√© Sobota&#39;, &#39;Andski&#39;, &#39;Andy Bianchini&#39;, &#39;Andy Ruddy&#39;, &#39;Angel&#39;, &#39;Angel Ace&#39;, &#39;Angelique&#39;, &#39;Angie&#39;, &#39;Animato&#39;, &#39;Ankit Sharda&#39;, &#39;Ann Bailey&#39;, &#39;Anna Lee&#39;, &#39;Anna Toth&#39;, &#39;Anomaly&#39;, &#39;Another World&#39;, &#39;Anova&#39;, &#39;Anry&#39;, &#39;Anthanasia 2&#39;, &#39;Anthony Cordell&#39;, &#39;Anthony Ragni&#39;, &#39;Anthony S&#39;, &#39;Anthony Waldhorn&#39;, &#39;Antonia from Jets Overhead&#39;, &#39;Apollo Nash&#39;, &#39;Apple One&#39;, &#39;Approaching Black&#39;, &#39;Aquilo&#39;, &#39;Aradeo&#39;, &#39;Arc In The Sky&#39;, &#39;Architect&#39;, &#39;Arctic Lake&#39;, &#39;Aressa&#39;, &#39;Ariel &amp; Danilo&#39;, &#39;Arjans&#39;, &#39;Ark Planet&#39;, &#39;Arpiction&#39;, &#39;Arrival &amp; Fonar&#39;, &#39;Ars&#39;, &#39;Artra&#39;, &#39;Arty &amp; Mat Zo&#39;, &#39;Aryas&#39;, &#39;Arys&#39;, &#39;Aryue&#39;, &#39;As One&#39;, &#39;Asbj√∏rn&#39;, &#39;Ashley Bradbury&#39;, &#39;Ashley Smith&#39;, &#39;Asia Whiteacre&#39;, &#39;Askery&#39;, &#39;Aspiration&#39;, &#39;Asteroid&#39;, &#39;Astral Projection&#39;, &#39;Astrid Suryanto&#39;, &#39;Astrosphere&#39;, &#39;Ataraxia&#39;, &#39;Atlantia&#39;, &#39;Atmosfearz&#39;, &#39;Audiko&#39;, &#39;Avalon&#39;, &#39;Avari&#39;, &#39;Avatar One&#39;, &#39;Aveo&#39;, &#39;Avergaint&#39;, &#39;Aylin&#39;, &#39;Azotti&#39;, &#39;Azzido Da Bass&#39;, &#39;B. Gheorghe&#39;, &#39;BBSOUND&#39;, &#39;BORDERLESS&#39;, &#39;BRKLYN&#39;, &#39;Backbeat&#39;, &#39;Badlands&#39;, &#39;Balearia&#39;, &#39;Bariuz&#39;, &#39;Barry Connell&#39;, &#39;Bart Skils&#39;, &#39;Bas van Essen&#39;, &#39;Bassbin Twins&#39;, &#39;Bassjackers&#39;, &#39;Bazooka&#39;, &#39;Beatman &amp; Ludmilla&#39;, &#39;BeeGee&#39;, &#39;Beltek&#39;, &#39;Ben Gold Remix&#39;, &#39;Benicio&#39;, &#39;Benjamin Bates&#39;, &#39;Benjani&#39;, &#39;Bent&#39;, &#39;Benya&#39;, &#39;Benz &amp; MD&#39;, &#39;Bev Wild&#39;, &#39;Big Top&#39;, &#39;Bixx&#39;, &#39;Bizzare Contact&#39;, &#39;Bj√∂rn Niclas&#39;, &#39;Black &amp; Blue&#39;, &#39;Black XS&#39;, &#39;Blair Bitch&#39;, &#39;Blasterjaxx&#39;, &#39;Blood Groove&#39;, &#39;Blood Groove and Kikis&#39;, &#39;BluSkay&#39;, &#39;Blue Horizon&#39;, &#39;Blue Manta&#39;, &#39;Blue Silence&#39;, &#39;Blue5even&#39;, &#39;Blueberg&#39;, &#39;Bluefire&#39;, &#39;Bobak&#39;, &#39;Bodyrox&#39;, &#39;Bolier&#39;, &#39;Boom&#39;, &#39;Boombastix&#39;, &#39;Boosta&#39;, &#39;Born 87&#39;, &#39;Boss@nova&#39;, &#39;Bowdidge&#39;, &#39;Bowdidge &amp; Taylor&#39;, &#39;Boxer&#39;, &#39;Boxer &amp; Forbes&#39;, &#39;Braiman&#39;, &#39;Braiman &amp; Falcon&#39;, &#39;Brando&#39;, &#39;Brandt&#39;, &#39;Brave&#39;, &#39;Breathe Carolina&#39;, &#39;Breeder&#39;, &#39;Brian&#39;, &#39;Brian Cameron&#39;, &#39;Brian Laruso&#39;, &#39;Brigitta&#39;, &#39;Britty&#39;, &#39;Brooke Tomlinson&#39;, &#39;Brothers Funk&#39;, &#39;Bruce Cullen&#39;, &#39;Brute Force&#39;, &#39;Bryan Summerville&#39;, &#39;Burak &amp; Emre&#39;, &#39;C-Base&#39;, &#39;C-Jay&#39;, &#39;C.J.Seven&#39;, &#39;CADE&#39;, &#39;CHRISTON&#39;, &#39;CJ Arthur&#39;, &#39;CRW&#39;, &#39;CVNT5&#39;, &#39;CYA&#39;, &#39;Cadence&#39;, &#39;Callisto&#39;, &#39;Calvin Logue&#39;, &#39;Cam Melnyk&#39;, &#39;Canberra&#39;, &#39;Capa (Official)&#39;, &#39;Cara Salimando&#39;, &#39;Carah Faye&#39;, &#39;Carl Crellin&#39;, &#39;Carlos Martz&#39;, &#39;Carly Burns&#39;, &#39;Carol Lee&#39;, &#39;Caroline Harrison&#39;, &#39;Cary Nokey&#39;, &#39;Cassidy Ford&#39;, &#39;Catalyst&#39;, &#39;Cave&#39;, &#39;CeCe Peniston&#39;, &#39;Celauro&#39;, &#39;Cell X&#39;, &#39;Cenk Basaran&#39;, &#39;Centre&#39;, &#39;Cern&#39;, &#39;Cesar Lugo&#39;, &#39;Chab&#39;, &#39;Changer&#39;, &#39;Charles MCThorn&#39;, &#39;Charlie White&#39;, &#39;Charmy&#39;, &#39;Chelsea Lee&#39;, &#39;Cherry&#39;, &#39;Chloe Stamp&#39;, &#39;Choopie&#39;, &#39;Chris Antoine&#39;, &#39;Chris Callado&#39;, &#39;Chris Cockerill&#39;, &#39;Chris Giuliano&#39;, &#39;Chris James&#39;, &#39;Chris North&#39;, &#39;Chris Reece&#39;, &#39;Chris Severe&#39;, &#39;Christian Carcamo&#39;, &#39;Christian K.&#39;, &#39;Christian Zechner&#39;, &#39;Christina Novell&#39;, &#39;Christopher Norman&#39;, &#39;Christopher Tin&#39;, &#39;CiDiAN&#39;, &#39;Ciaran Dolan&#39;, &#39;Cirillo&#39;, &#39;Cla6&#39;, &#39;Claessen&#39;, &#39;Clancy&#39;, &#39;Clara Sofie&#39;, &#39;Claudinho Brasil&#39;, &#39;Clay C&#39;, &#39;Cloudbreak&#39;, &#39;Cloudriver&#39;, &#39;Coax&#39;, &#39;Coca &amp; Villa&#39;, &#39;Codeko&#39;, &#39;Coenraad&#39;, &#39;Coexist&#39;, &#39;Cold Face&#39;, &#39;Cole Plante&#39;, &#39;Coll&#39;, &#39;Colonial&#39;, &#39;Coming Soon&#39;, &#39;Con Phillips&#39;, &#39;Core &amp; S√∏rensen&#39;, &#39;Corey Andrews&#39;, &#39;Corey James&#39;, &#39;Cornelis Van Dijk&#39;, &#39;Cory Friesenhan&#39;, &#39;Cosmic Blueprint&#39;, &#39;Cosmicman&#39;, &#39;Cosmithex&#39;, &#39;Cosmo &amp; Skoro&#39;, &#39;Cosmo Kid&#39;, &#39;Costa Pantazis&#39;, &#39;Craig-O&#39;, &#39;Cristian Ketelaars&#39;, &#39;Crossover&#39;, &#39;Crusy&#39;, &#39;Cygnus X1&#39;, &#39;Cylum&#39;, &#39;Cymatics&#39;, &#39;D&amp;W&#39;, &#34;D&#39;Jaeger&#34;, &#39;D-Line&#39;, &#39;D. Ghioc&#39;, &#39;D.O.D&#39;, &#39;D:Folt&#39;, &#39;DJ AMO&#39;, &#39;DJ Aligator&#39;, &#39;DJ Dazzle&#39;, &#39;DJ Dean&#39;, &#39;DJ Dream&#39;, &#39;DJ Fred Numf&#39;, &#39;DJ Genix&#39;, &#39;DJ Ghost&#39;, &#39;DJ Halperin&#39;, &#39;DJ Jan&#39;, &#39;DJ Kim&#39;, &#39;DJ Manta&#39;, &#39;DJ Nukem&#39;, &#39;DJ Observer&#39;, &#39;DJ Preach&#39;, &#39;DJ Rap&#39;, &#39;DJ Shog&#39;, &#39;DJ Tommyboy&#39;, &#39;DJ Tostie&#39;, &#39;DJ Wag&#39;, &#39;DR. DRTY&#39;, &#39;Da Others&#39;, &#39;Daimy Lotus&#39;, &#39;Dallas Superstars&#39;, &#39;Damae&#39;, &#39;Dan Ginolfi&#39;, &#39;Dan Reaves &amp; Niels Von Ahorn&#39;, &#39;Dan Sanfilippo&#39;, &#39;Dani Avramov&#39;, &#39;Dani Boden&#39;, &#39;Daniel Baron&#39;, &#39;Daniel Blanks&#39;, &#39;Daniel Etienne&#39;, &#39;Daniel Paul Davis&#39;, &#39;Daniel Summers&#39;, &#39;Daniel Waanrooy&#39;, &#39;Danny Cullen&#39;, &#39;Danny Loko&#39;, &#39;Danny Ocean&#39;, &#39;Danny Young&#39;, &#39;Dany Dazano&#39;, &#39;Dany G&#39;, &#39;Danyella&#39;, &#39;Danyka Nedeau&#39;, &#39;Danza Violento&#39;, &#39;Danzfolk&#39;, &#39;Darius&#39;, &#39;Darius Romanowski&#39;, &#39;Dark Monks&#39;, &#39;Dark Moon&#39;, &#39;Darkness Falls&#39;, &#34;Darren O&#39;Brien&#34;, &#39;Dasha&#39;, &#39;Datt&#39;, &#39;Dave Blackman&#39;, &#39;Dave Dowsett&#39;, &#39;Dave Leyrock&#39;, &#39;Dave Nadz&#39;, &#39;Dave Pearce&#39;, &#39;David&#39;, &#39;David Amo &amp; Julio Navas&#39;, &#39;David Julien&#39;, &#39;Davy Van Eynde&#39;, &#39;Dawnseekers&#39;, &#39;Da√Øgon&#39;, &#39;DeColita&#39;, &#39;Deathmind&#39;, &#39;Deedrah&#39;, &#39;Deep Dish&#39;, &#39;Deep Fog&#39;, &#39;Deep Orbit&#39;, &#39;Delta One&#39;, &#39;Delta-S&#39;, &#39;Denga vs. Manus&#39;, &#39;Denis Airwave&#39;, &#39;Denis Karpinsky&#39;, &#39;Denis Neeve&#39;, &#39;Denis Rivera&#39;, &#39;Dennis Eshel&#39;, &#39;Dennis Kruissen&#39;, &#39;Deorro&#39;, &#39;Der Mystik&#39;, &#39;Devon Colombage&#39;, &#39;DiVasco&#39;, &#39;Diaz&#39;, &#39;Digital Blues&#39;, &#39;Digital Dreamerz&#39;, &#39;Digital Horizon&#39;, &#39;Digital Phaze&#39;, &#39;Digital Vision&#39;, &#39;Dilara&#39;, &#39;Dimitri Vangelis &amp; Wyman&#39;, &#39;Dirty South&#39;, &#39;Dirty Vegas&#39;, &#39;Dis Play&#39;, &#39;Disco Citizens&#39;, &#39;Disco Killerz&#39;, &#39;Discodyne&#39;, &#39;Disfunktion &amp; Husman&#39;, &#39;Diskomo&#39;, &#39;Diversion&#39;, &#39;Division Zero&#39;, &#39;Dj Mystic&#39;, &#39;Djiva&#39;, &#39;Dmitriy Kuznetsov&#39;, &#39;Dmitry Bessonov&#39;, &#39;Dmitry Federov&#39;, &#39;Dmitry Golban&#39;, &#39;Dom Youdan&#39;, &#39;Dominic Manns&#39;, &#39;Donny Mac&#39;, &#39;Dory Badawi&#39;, &#39;Dr Willis&#39;, &#39;Dr. Willis&#39;, &#39;Dragana&#39;, &#39;Dragon and Jontron&#39;, &#39;Dreamlife&#39;, &#39;Dreamseekers&#39;, &#39;Drew Ryn&#39;, &#39;DubVision&#39;, &#39;Durs&#39;, &#39;Dustin Hussain&#39;, &#39;Dymos&#39;, &#39;Dynamic Emotion&#39;, &#39;Dynamic Sense&#39;, &#39;E&amp;G&#39;, &#39;E.T Project&#39;, &#39;ESSEX&#39;, &#39;Earthbound&#39;, &#39;Earthspirit&#39;, &#39;East &amp; Atlas&#39;, &#39;Econu&#39;, &#39;Eddie Lung&#39;, &#39;Edun&#39;, &#39;Egera&#39;, &#39;Eide&#39;, &#39;Eireann Wax&#39;, &#39;Ekon&#39;, &#39;El&#39;, &#39;El Cortez&#39;, &#39;Electric Pulse&#39;, &#39;Electric Traveller&#39;, &#39;Electronic Nova&#39;, &#39;Elias B.&#39;, &#39;Ell-Er&#39;, &#39;Elle Ve&#39;, &#39;Ellez Ria&#39;, &#39;Elucidus&#39;, &#39;Elyes Karray&#39;, &#39;Emanuele Congeddu&#39;, &#39;Emery&#39;, &#39;Emi&#39;, &#39;Emi Jarvi&#39;, &#39;Emilio Fernandez&#39;, &#39;Emily Harder&#39;, &#39;Emily Vaughn&#39;, &#39;Eminence&#39;, &#39;Emma Gillespie&#39;, &#39;Emotional Horizons&#39;, &#39;Emporium&#39;, &#39;En-Motion&#39;, &#39;Endless Blue&#39;, &#39;Envy&#39;, &#39;Enya Angel&#39;, &#39;Enyo Giove&#39;, &#39;Epica&#39;, &#39;Epsilon 9&#39;, &#39;Erick Strong&#39;, &#39;Erika K&#39;, &#39;Erly Tepshi&#39;, &#39;Eshericks&#39;, &#39;Espen Lorentzen&#39;, &#39;Essonita&#39;, &#39;Etasonic&#39;, &#39;Ethillas&#39;, &#39;Eva Pavlova&#39;, &#39;Evan Kendricks&#39;, &#39;Evan London&#39;, &#39;Evan Pearce&#39;, &#39;Evave&#39;, &#39;Evelio&#39;, &#39;Evelyn&#39;, &#39;Ever Burn&#39;, &#39;Evil Sardine&#39;, &#39;Evin Skye&#39;, &#39;Ex-Driver&#39;, &#39;Exertion&#39;, &#39;Exirninds&#39;, &#39;Exit&#39;, &#39;ExoSun&#39;, &#39;F-6&#39;, &#39;F.U.S.E.&#39;, &#39;FACEPALM&#39;, &#39;FB&#39;, &#39;FERR&#39;, &#39;Fadios&#39;, &#39;Fady&#39;, &#39;Fafaq&#39;, &#39;Fallen Skies&#39;, &#39;Far &amp; Away&#39;, &#39;Faraway Project&#39;, &#39;Farb&#39;, &#39;Farra&#39;, &#39;Fatkid&#39;, &#39;Fergie &amp; Sadrian&#39;, &#39;Ferry&#39;, &#39;Fierce&#39;, &#39;Fifth Dimension&#39;, &#39;Filterheads&#39;, &#39;Final Aeon&#39;, &#39;Fingerling&#39;, &#39;Finlay&#39;, &#39;Fiona Reid&#39;, &#39;Firebeatz&#39;, &#39;First&#39;, &#39;First &amp; Andre Cruiser&#39;, &#39;Fisical Project&#39;, &#39;Fix To Fax&#39;, &#39;Flatdisk&#39;, &#39;FloE&#39;, &#39;Floor Divisions&#39;, &#39;Floria Ambra&#39;, &#39;Fluir&#39;, &#39;Flying Decibels&#39;, &#39;Fokko Versloot&#39;, &#39;Foot&#39;, &#39;Forerunners&#39;, &#39;Forion&#39;, &#39;Foundry&#39;, &#39;Franco Riccobaldi&#39;, &#39;Frank Dattilo&#39;, &#39;Frank T.R.A.X.&#39;, &#39;Frank Watson&#39;, &#39;Franz&#39;, &#39;Fredd Moz&#39;, &#39;Fredda. L&#39;, &#39;Fredrik Miller&#39;, &#39;FreeFall&#39;, &#39;Freek Geuze&#39;, &#39;Freelancer&#39;, &#39;Freigeist&#39;, &#39;Freischwimmer&#39;, &#39;French Skies&#39;, &#39;Frog &amp; Derb&#39;, &#39;Frontliner&#39;, &#39;Frost&#39;, &#39;Frost &amp; Maron&#39;, &#39;Funkagenda&#39;, &#39;Furkan Senol&#39;, &#39;Future Disciple&#39;, &#39;Futuristic Polar Bears&#39;, &#39;Fyrsta&#39;, &#39;G-Mark&#39;, &#39;G-Phaxe&#39;, &#39;G-Tek&#39;, &#39;G.D.&#39;, &#39;GMS&#39;, &#39;GQ&#39;, &#39;Gabriel Lukosz&#39;, &#39;Garrido&#39;, &#39;Garrido &amp; Skehan&#39;, &#39;Gary Proud&#39;, &#39;Gat Decor&#39;, &#39;Gate&#39;, &#39;Gate 4&#39;, &#39;Gather&#39;, &#39;Gaudium&#39;, &#39;Gavyn Mitchel&#39;, &#39;Gene Xander&#39;, &#39;Genesis&#39;, &#39;Gentech&#39;, &#39;Gerry Menu&#39;, &#39;Gil Zambrano&#39;, &#39;Gilbert AM&#39;, &#39;Glensk&#39;, &#39;Gliss&#39;, &#39;Global Experience&#39;, &#39;Glynn Alan&#39;, &#39;Gofman&#39;, &#39;Golax&#39;, &#39;Golden Girls&#39;, &#39;Gologan&#39;, &#39;Good &amp; Bower&#39;, &#39;Goom Gum&#39;, &#39;Gradian&#39;, &#39;Graham Gold&#39;, &#39;Graumann&#39;, &#39;Green &amp; Falkner&#39;, &#39;Green Atlas&#39;, &#39;Greenstone&#39;, &#39;Gregori Klosman&#39;, &#39;Gregory Esayan&#39;, &#39;Griff Clawson&#39;, &#39;Grizli Man&#39;, &#39;Groove Garcia&#39;, &#39;Group Number One&#39;, &#39;Guiseppe Ottaviani&#39;, &#39;Gum Me&#39;, &#39;HANDY K&#39;, &#39;HRTWRK&#39;, &#39;HVNNAH&#39;, &#39;Hadley&#39;, &#39;Halcyone&#39;, &#39;Haley&#39;, &#39;Hammer&#39;, &#39;Hannah Rose&#39;, &#39;Hans Seo&#39;, &#39;Happy Monkey&#39;, &#39;Hardfloor&#39;, &#39;Haris&#39;, &#39;Haris C&#39;, &#39;Harmonika&#39;, &#39;Harper &amp; Green&#39;, &#39;Hazrain Norman&#39;, &#39;Heard Right&#39;, &#39;Heidi Anne&#39;, &#39;Helen Sylk&#39;, &#39;Hello Machines&#39;, &#39;Hensha&#39;, &#39;Hesham Ghoneim&#39;, &#39;Hi Profile&#39;, &#39;High Frequencies&#39;, &#39;Hilton Caswell&#39;, &#39;Hindsight&#39;, &#39;Hiroyuki ODA&#39;, &#39;Hjerkinn&#39;, &#39;Hodel &amp; Hornblad&#39;, &#39;Holland&#39;, &#39;Howe&#39;, &#39;Huarache&#39;, &#39;Hudson &amp; Kant&#39;, &#39;Hybrid&#39;, &#39;Hydriod&#39;, &#39;Hydro Poison&#39;, &#39;Hypaton&#39;, &#39;H√ãLIX&#39;, &#39;I-Vision&#39;, &#39;IJA&#39;, &#39;IKO&#39;, &#39;INVIRON&#39;, &#39;Iain M&#39;, &#39;Ian Solano&#39;, &#39;Idaho&#39;, &#39;Ignas&#39;, &#39;Igor Dyachkov&#39;, &#39;Ikerya Project&#39;, &#39;Ilya Flame&#39;, &#34;Ima&#39;gin&#34;, &#39;Impulse Wave&#39;, &#39;In Gray&#39;, &#39;In-Phase&#39;, &#39;Inbox&#39;, &#39;Indifferent Guy&#39;, &#39;Infected Mushroom&#39;, &#39;Infected Mushrooms&#39;, &#39;Infinity&#39;, &#39;Inge Bergmann&#39;, &#39;Inge Lemon&#39;, &#39;Inger Hansen&#39;, &#39;Inner &amp; Outer&#39;, &#39;Innerlight&#39;, &#39;Inpetto&#39;, &#39;Interactive Noise&#39;, &#39;Intersonic&#39;, &#39;Intrique&#39;, &#39;Irdi&#39;, &#39;Irena Love&#39;, &#39;Irina Makosh&#39;, &#39;Isa Marie&#39;, &#39;Isha&#39;, &#39;Isobel Mai&#39;, &#39;Ivan Gough&#39;, &#39;Ivan Khurtin&#39;, &#39;Iversoon &amp; Alex Daf&#39;, &#39;Izzy Warner&#39;, &#39;J. Hart&#39;, &#39;J.L.N.D.&#39;, &#39;J.O.C.&#39;, &#39;J.Puchler&#39;, &#39;J.Shore&#39;, &#39;JAMASTER A&#39;, &#39;JC Chavez&#39;, &#39;JMS&#39;, &#39;Jacqueline&#39;, &#39;Jade 4 U&#39;, &#39;Jake Reese&#39;, &#39;Jake Terra&#39;, &#39;Jake Torrey&#39;, &#39;Jakko&#39;, &#39;Jam El Mar&#39;, &#39;JamX&#39;, &#39;Jamala&#39;, &#39;James Allan&#39;, &#39;James De Torres&#39;, &#39;James Kiedis&#39;, &#39;Jameson Tullar&#39;, &#39;Jamie Anderson&#39;, &#39;Jamie Harrison&#39;, &#39;Jamie K&#39;, &#39;Jamx &amp; De Leon&#39;, &#39;Jan Johnson&#39;, &#39;Jan Loper&#39;, &#39;Jan Miller&#39;, &#39;Jan Oostdijk&#39;, &#39;Jan Oostdyk&#39;, &#39;Jane Maximova&#39;, &#39;Jannika&#39;, &#39;January Embers&#39;, &#39;Jardin&#39;, &#39;Jared Lee&#39;, &#39;Jark Prongo&#39;, &#39;Jasmine Maurie&#39;, &#39;Jason Seizures&#39;, &#39;Javah&#39;, &#39;JayCan&#39;, &#39;Jaydee&#39;, &#39;Jeff Rona&#39;, &#39;Jeitam Osheen&#39;, &#39;Jenni Perez&#39;, &#39;Jennifer Cooke&#39;, &#39;Jennifer Paige&#39;, &#39;Jenry R&#39;, &#39;Jericho Frequency&#39;, &#39;Jerome&#39;, &#39;Jessica Riddle&#39;, &#39;Jessy Greene&#39;, &#39;Jetson&#39;, &#39;Jim&#39;, &#39;JimiJ&#39;, &#39;Jimmy Chou&#39;, &#39;Jinadu&#39;, &#39;Jinus&#39;, &#39;Jjoo&#39;, &#39;Jo Maddox&#39;, &#39;Joc&#39;, &#39;Jochan Morrisen&#39;, &#39;Joe Garrett&#39;, &#39;Joe Lyons&#39;, &#39;Joel Fletcher&#39;, &#39;Joel Peres&#39;, &#39;Joel Spencer&#39;, &#39;Johannes Fischer&#39;, &#39;John Henderson&#39;, &#39;John Hetmond&#39;, &#39;John Manz&#39;, &#39;John Mash&#39;, &#39;John Selway&#39;, &#39;John Swanson&#39;, &#39;Johnny B&#39;, &#39;Johnny Kelvin&#39;, &#39;Jokate Benson&#39;, &#39;Jon Hopkins&#39;, &#39;Joni Fatora&#39;, &#39;Jonny Royall&#39;, &#39;Joonas Hahmo presents DOS622&#39;, &#39;Jordy Dazz&#39;, &#39;Joren Heelsing&#39;, &#39;Joris Voorn&#39;, &#39;Jorn &amp; Vito&#39;, &#39;Jose De Mara&#39;, &#39;Jozhy K&#39;, &#39;Judie Tzuke&#39;, &#39;Jules&#39;, &#39;Jules Porter&#39;, &#39;Julia Ross&#39;, &#39;Julia Violine&#39;, &#39;Julie Morrison&#39;, &#39;Juliet Lyons&#39;, &#39;Jullians&#39;, &#39;Jumpy Jumps&#39;, &#39;Junostar&#39;, &#39;Just D&#39;, &#39;Justin Dobslaw&#39;, &#39;KAST&#39;, &#39;KINETICA&#39;, &#39;KOS Project&#39;, &#39;Kaelyn Behr&#39;, &#39;Kainos&#39;, &#39;Kalafut &amp; Fygle&#39;, &#39;Kaleena Zanders&#39;, &#39;Kamar 2&#39;, &#39;Kameron Alexander&#39;, &#39;Kamilo Sanclemente&#39;, &#39;Kane Nelson&#39;, &#39;Kara Sun&#39;, &#39;Kareem Fad&#39;, &#39;Karen&#39;, &#39;Karen Elliot&#39;, &#39;Karybde&#39;, &#39;Karybde &amp; Scylla&#39;, &#39;Kash Trivedi&#39;, &#39;Kaste&#39;, &#39;Kat Marsh&#39;, &#39;Kate Dowman&#39;, &#39;Kathy Heath&#39;, &#39;Katie DiCicco&#39;, &#39;Katri&#39;, &#39;Katrik&#39;, &#39;Kaya-T&#39;, &#39;Ken Loi&#39;, &#39;Ken Spector&#39;, &#39;Kenan Teke&#39;, &#39;Kenneth Cruz&#39;, &#39;Kent &amp; Gian&#39;, &#39;Keo Nozari&#39;, &#39;Kevin de Vries&#39;, &#39;Kevu&#39;, &#39;KeyWork&#39;, &#39;Khaz&#39;, &#39;Kikis&#39;, &#39;Killogy&#39;, &#39;Kinetica&#39;, &#39;Kirill Nikolaev&#39;, &#39;Kirsch&#39;, &#39;Kitimo Lopez&#39;, &#39;Kobbe&#39;, &#39;Kobee&#39;, &#39;Koen Lebbens&#39;, &#39;Koglin &amp; Dewar&#39;, &#39;Kokaholla&#39;, &#39;Koko LaRoo&#39;, &#39;Kostya Veter&#39;, &#39;Krama&#39;, &#39;Kris Maydak&#39;, &#39;Kris Menace&#39;, &#39;Kristian Naim&#39;, &#39;Kristina Sky&#39;, &#39;Kristoffer Ljungberg&#39;, &#39;Kuffdam&#39;, &#39;Kularis&#39;, &#39;Kutski&#39;, &#39;Kyamoto&#39;, &#39;Kye Sones&#39;, &#39;Kyle Pepper&#39;, &#39;L.S.G.&#39;, &#39;LACES&#39;, &#39;LFO&#39;, &#39;LR&#39;, &#39;LR Uplift&#39;, &#39;LaMoor&#39;, &#39;Lansy K&#39;, &#39;Larke&#39;, &#39;Larsson&#39;, &#39;Last Island&#39;, &#39;Latex Zebra&#39;, &#39;Laura Turner&#39;, &#39;Laurell&#39;, &#34;Lauren L&#39;aimant&#34;, &#39;Lauren N√≠ Chasaide&#39;, &#39;Lauren Ray&#39;, &#39;Lavoie&#39;, &#39;Lawson&#39;, &#39;LeBlanc&#39;, &#39;Lee And Slater&#39;, &#39;Lee Canning&#39;, &#39;Lee Haslam&#39;, &#39;Leilani&#39;, &#39;Lele Toniq&#39;, &#39;Lele Troniq&#39;, &#39;Lens&#39;, &#39;Leolife&#39;, &#39;Leon 78&#39;, &#39;Leon Lour&#39;, &#39;Lepi Taival&#39;, &#39;Les Hemstock&#39;, &#39;Levann&#39;, &#39;Lewis Dodkins&#39;, &#39;Lexicon 4&#39;, &#39;Liam Hathaway&#39;, &#39;Liam Nicklin&#39;, &#39;LibeDime&#39;, &#39;Liezl&#39;, &#39;Lifelike&#39;, &#39;Lifted Emotion&#39;, &#39;LightControl&#39;, &#39;Likwid&#39;, &#39;Line Pursuit&#39;, &#39;Linn&#39;, &#39;Liquid Life&#39;, &#39;Liquid Todd&#39;, &#39;Liquid Vision&#39;, &#39;Little Nikki&#39;, &#39;Lizzy Land&#39;, &#39;Ljungqvist&#39;, &#39;Logic Stories&#39;, &#39;Lokka&#39;, &#39;Lola&#39;, &#39;Lonely Boy&#39;, &#39;Loobosh&#39;, &#39;Loomer&#39;, &#39;Lost Lynx&#39;, &#39;Lost Sequence&#39;, &#39;Lostep&#39;, &#39;Lostman&#39;, &#39;Love N Frequency&#39;, &#39;Luciana Di Nardo&#39;, &#39;Lucien&#39;, &#39;Luise Najib&#39;, &#39;Luiz B&#39;, &#39;Lumin-8&#39;, &#39;Luminal&#39;, &#39;Lumination&#39;, &#39;Luminn&#39;, &#39;Luuya&#39;, &#39;Lyci&#39;, &#39;Lycii&#39;, &#39;M Waering&#39;, &#39;M-Wood&#39;, &#39;M. Wilson&#39;, &#39;M11&#39;, &#39;MCO&#39;, &#39;MDX&#39;, &#39;Ma2shek&#39;, &#39;Macj&#39;, &#39;Madelin Zero&#39;, &#39;Maerin&#39;, &#39;Maglev&#39;, &#39;Magnetic Point&#39;, &#39;Maguire&#39;, &#39;Mahaputra&#39;, &#39;MainGain&#39;, &#39;Mainx&#39;, &#39;Malu&#39;, &#39;Maluu&#39;, &#39;Mandy Jones&#39;, &#39;Maniel Le Saux&#39;, &#39;Mantra&#39;, &#39;Manuel Le Sau&#39;, &#39;Manufactured Superstars&#39;, &#39;Manvel Ter-Pogosyan&#39;, &#39;Marc Dawn&#39;, &#39;Marc Volt&#39;, &#39;Marcell Stone&#39;, &#39;Marco Svarda&#39;, &#39;Mariah McManus&#39;, &#39;Mario Ayuda&#39;, &#39;Marius Verwoert&#39;, &#39;Mark Brain&#39;, &#39;Mark Found&#39;, &#39;Mark Pledger&#39;, &#39;Mark S&#39;, &#39;Mark Sinclair&#39;, &#39;Mark Versluis&#39;, &#39;Mark W&#39;, &#39;Marko Kantola&#39;, &#39;Marksun&#39;, &#39;Marksun &amp; Brian&#39;, &#39;Martens&#39;, &#39;Martijn Stegerhoek&#39;, &#39;Martin Drake&#39;, &#39;Martin Soundriver&#39;, &#39;Mason&#39;, &#39;Massai One&#39;, &#39;Mastro&#39;, &#39;Matt Chowski&#39;, &#39;Matt Eray&#39;, &#39;Matt Everson&#39;, &#39;Matt Forner&#39;, &#39;Matt Lange&#39;, &#39;Matthew Adam&#39;, &#39;Matthew Preffekt&#39;, &#39;Matthew White&#39;, &#39;Matthias Bishop&#39;, &#39;Matti Laamanen&#39;, &#39;Matvey Emerson&#39;, &#39;Maurice Lekkerkerker&#39;, &#39;Mavi&#39;, &#39;Max Braiman&#39;, &#39;Max Denoise&#39;, &#39;Max Graham vs Protoculture&#39;, &#39;Max Roven&#39;, &#39;Max Vangeli&#39;, &#39;Maxi Jazz&#39;, &#39;Maxim Lany&#39;, &#39;May Hassan&#39;, &#39;Mazza&#39;, &#39;McAree&#39;, &#39;McAree &amp; Clancy&#39;, &#39;McAuley&#39;, &#39;McGregor&#39;, &#39;Medii&#39;, &#39;Megamind&#39;, &#39;Meirmans&#39;, &#39;Mekka&#39;, &#39;Melissa Mathes&#39;, &#39;Members Of Mayday&#39;, &#39;Memory Loss&#39;, &#39;Menfis&#39;, &#39;Meridith Call&#39;, &#39;Messler&#39;, &#39;Metroom&#39;, &#39;Meyer&#39;, &#39;Mhammed El Alam&#39;, &#39;Mia Koo&#39;, &#39;Micah Martin&#39;, &#39;Michael&#39;, &#39;Michael Badal&#39;, &#39;Michael Burns&#39;, &#39;Michael Kaelios&#39;, &#39;Michael Lee&#39;, &#39;Michael Mashkov&#39;, &#39;Michael-Li&#39;, &#39;Miella&#39;, &#39;Miguel Sassot&#39;, &#39;Miika Kuisma&#39;, &#39;Mike Efex&#39;, &#39;Mike Hawkins&#39;, &#39;Mike Heart&#39;, &#39;Mike Septima&#39;, &#39;Mike Wind&#39;, &#39;Mikkas&#39;, &#39;Mil Brokes&#39;, &#39;Miles&#39;, &#39;Miller vs Divini&#39;, &#39;Mina&#39;, &#39;Mindscope&#39;, &#39;Miranda Lee Richards&#39;, &#39;Miroslav Virlik&#39;, &#39;Misia Furtak&#39;, &#39;Mistigris&#39;, &#39;Mistral&#39;, &#39;Mivase&#39;, &#39;Mnemonic&#39;, &#39;Moby&#39;, &#39;Modena&#39;, &#39;Mohamed Hamdy&#39;, &#39;Mohammed Khalila&#39;, &#39;Moiez&#39;, &#39;Mokita&#39;, &#39;Monika Santucci&#39;, &#39;Monty Wells&#39;, &#39;Moon&#39;, &#39;Moonforce&#39;, &#39;More Analog&#39;, &#39;Morphing Shadows&#39;, &#39;Morten Granau&#39;, &#39;Mosimann&#39;, &#39;Mosko&#39;, &#39;Motion Sound&#39;, &#39;Mozella&#39;, &#39;Mr Andre&#39;, &#39;Mr Carefull&#39;, &#39;Mr. Sam&#39;, &#39;Mr. Sax&#39;, &#39;Muhib Khan&#39;, &#39;Murica&#39;, &#39;Murtagh&#39;, &#39;Musix&#39;, &#39;Muska&#39;, &#39;Myde&#39;, &#39;Myon &amp; Late Night Alumi&#39;, &#39;Myron&#39;, &#39;Mysterious Movement&#39;, &#39;Mystery Islands&#39;, &#39;Mystical Complex&#39;, &#39;N2o&#39;, &#39;NG Rezonance&#39;, &#39;NKI&#39;, &#39;NOHC&#39;, &#39;Naeba&#39;, &#39;Nail Abdiev&#39;, &#39;Nakadia&#39;, &#39;Nat Monday&#39;, &#39;Natalia Gioia&#39;, &#39;Natalie Holmes&#39;, &#39;Natalie Peris&#39;, &#39;Natalie Shay&#39;, &#39;Natlife&#39;, &#39;Nature One Inc.&#39;, &#39;Neil Hunter&#39;, &#39;Neo Kekkonen&#39;, &#39;Neofance&#39;, &#39;Neos&#39;, &#39;Neple&#39;, &#39;Neshi Futuro&#39;, &#39;Neve White&#39;, &#39;Nic Vegter&#39;, &#39;Nick Martin&#39;, &#39;Nick Robertson&#39;, &#39;Nick Stufano&#39;, &#39;Nick Thompson&#39;, &#39;Nickie Minshall&#39;, &#39;Nicole McKenna&#39;, &#39;Niels Von Ahorn&#39;, &#39;Nikhil Prakash&#39;, &#39;Nino Lucarelli&#39;, &#39;Nish&#39;, &#39;Nivaya&#39;, &#39;No Class&#39;, &#39;No Comment&#39;, &#39;Noctiva&#39;, &#39;Noel Gitman&#39;, &#39;Nomination&#39;, &#39;Nora En Pure&#39;, &#39;Norah B.&#39;, &#39;Nord Horizon&#39;, &#39;Nordan&#39;, &#39;Norin&#39;, &#39;Novan&#39;, &#39;Novastar&#39;, &#39;Nucvise&#39;, &#39;Nurlail&#39;, &#39;NuttaLyA&#39;, &#39;Oberon&#39;, &#39;Obie Fernandez&#39;, &#39;Oceania&#39;, &#39;Odison&#39;, &#39;Off Key&#39;, &#39;Off Limits&#39;, &#39;Ojan Nilsen&#39;, &#39;Oleg Espo&#39;, &#39;Oleg Farrier&#39;, &#39;Oliver &amp; Tom&#39;, &#39;Oliver Cattley&#39;, &#39;Oliver Englafjord&#39;, &#39;Oliver Lieb&#39;, &#39;Oliver Shine&#39;, &#39;Omen&#39;, &#39;Omiki&#39;, &#39;Omniks&#39;, &#39;One Half Bear&#39;, &#39;One Way&#39;, &#39;Opticane&#39;, &#39;Oradea&#39;, &#39;Orange 3&#39;, &#39;Orano&#39;, &#39;Origin&#39;, &#34;Orion&#39;s Dawn&#34;, &#39;Orjan Remix&#39;, &#39;Orkan&#39;, &#39;Orsa&#39;, &#39;Orunea&#39;, &#39;Osaru&#39;, &#39;Osip&#39;, &#39;Osiris&#39;, &#39;Osito&#39;, &#39;Ost&#39;, &#39;Oza&#39;, &#39;P.O.S.&#39;, &#39;PG2&#39;, &#39;PHD&#39;, &#39;PK&#39;, &#39;Pacheco&#39;, &#39;Paco Maroto&#39;, &#39;Paolo Mojo&#39;, &#39;Pathfinders&#39;, &#39;Patrick Devere&#39;, &#39;Patrick Stowson&#39;, &#39;Patricketto&#39;, &#39;Paul Allen&#39;, &#39;Paul Cook&#39;, &#39;Paul Courbet&#39;, &#39;Paul Gibson&#39;, &#39;Paul Johannessen&#39;, &#39;Paul Mayson&#39;, &#39;Paul Meany&#39;, &#39;Paul Mendez&#39;, &#39;Paul Morrell&#39;, &#39;Paul Rigel&#39;, &#39;Paul Skelton&#39;, &#39;Paul Tarrant&#39;, &#39;Paul Vernon&#39;, &#39;Pay &amp; White&#39;, &#39;Pearson &amp; Hirst&#39;, &#39;Pedersen&#39;, &#39;Penny Nixon&#39;, &#39;Perfect Vision&#39;, &#39;Perplexer&#39;, &#39;Pete Drury&#39;, &#39;Peter Dafnous&#39;, &#39;Peter McCowan&#39;, &#39;Pex L&#39;, &#39;Phaedra&#39;, &#39;Phanatic&#39;, &#39;Phatzoo&#39;, &#39;Phaxe&#39;, &#39;Philip Estevez&#39;, &#39;Philip Overdriver&#39;, &#39;Phillipe El Sisi&#39;, &#39;Philthy Chit&#39;, &#39;Phoebe Ryan&#39;, &#39;Phonic Youth&#39;, &#39;Pia Toscano&#39;, &#39;Pierce Fulton&#39;, &#39;Pierre in the Air&#39;, &#39;Pinkbox Special&#39;, &#39;Pinkque&#39;, &#39;Pino Benji&#39;, &#39;Pinque&#39;, &#39;Pirate&#39;, &#39;Pixel&#39;, &#39;Plastika&#39;, &#39;Plavka&#39;, &#39;Plexland&#39;, &#39;Plu-Ton&#39;, &#39;Pobsky&#39;, &#39;Poison Pro&#39;, &#39;Polaris&#39;, &#39;Poli Hubavenska&#39;, &#39;Polina&#39;, &#39;Poonyk&#39;, &#39;Portishead&#39;, &#39;Pretty Pink&#39;, &#39;Primo Lux&#39;, &#39;Prism&#39;, &#39;Private Collection&#39;, &#39;Project 8&#39;, &#39;Prototype&#39;, &#39;Psywork&#39;, &#39;Pulse Regime&#39;, &#39;Puma Scorz&#39;, &#39;Purelight&#39;, &#39;Qrion&#39;, &#39;Quadrophonia&#39;, &#39;Quizzow&#39;, &#39;R-Lend&#39;, &#39;R.E.N.O.I.S.E.&#39;, &#39;RAM presents RAW&#39;, &#39;RBBTS&#39;, &#39;RUMORS&#39;, &#39;RYDEX&#39;, &#39;Rad&#39;, &#39;Radiate&#39;, &#39;Radiate Worship&#39;, &#39;Radmila&#39;, &#39;Rafael Osmo&#39;, &#39;Rafif&#39;, &#39;Rakkano&#39;, &#39;Ralph Novell&#39;, &#39;Rambacy&#39;, &#39;Raminio&#39;, &#39;Ramsey Westwood&#39;, &#39;Randry&#39;, &#39;Randy Boyer &amp; Eric Tadla&#39;, &#39;Raneem&#39;, &#39;Rank&#39;, &#39;Rankey&#39;, &#39;Ransom&#39;, &#39;Rasster&#39;, &#39;Rated R&#39;, &#39;Ratty&#39;, &#39;Rave Channel&#39;, &#39;Raver&#39;, &#39;Rb Naylr&#39;, &#39;Re-Play&#39;, &#39;Re-Ward&#39;, &#39;ReDrive&#39;, &#39;Rea Garvey&#39;, &#39;Realm F&#39;, &#39;Reaves&#39;, &#39;Rebecca Emely&#39;, &#39;Rebourne&#39;, &#39;Receptive&#39;, &#39;Reconceal&#39;, &#39;Red Sky&#39;, &#39;Redd Square&#39;, &#39;Redhead Roman&#39;, &#39;Reece Low&#39;, &#39;Reez&#39;, &#39;Remco&#39;, &#39;Renvo&#39;, &#39;Rephlex One&#39;, &#39;Reunify&#39;, &#39;Revolution 9&#39;, &#39;Ria&#39;, &#39;Richie Loop&#39;, &#39;Rifter&#39;, &#39;Rigby&#39;, &#39;Rikkaz&#39;, &#39;Rimsky&#39;, &#39;Rinat Shabanov&#39;, &#39;Rio Lorenzo&#39;, &#39;Riot Night&#39;, &#39;Rising Altitude&#39;, &#39;Riva&#39;, &#39;Rob Naylor&#39;, &#39;Robbert Ladiges&#39;, &#39;Robert &amp; Jaron&#39;, &#39;Robert Darry&#39;, &#39;Roberta Harrison&#39;, &#39;Roddy Reyneart&#39;, &#39;Roland Clark&#39;, &#39;Rolfiek&#39;, &#39;Ron Malakai&#39;, &#39;Ron van den Beuken&#39;, &#39;Ronnie Allstar&#39;, &#39;Rory&#39;, &#34;Rory O&#39;Grady&#34;, &#39;Rosalee O‚ÄôConnell&#39;, &#39;Rospy&#39;, &#39;Ross Ferguson&#39;, &#39;Roxanne Barton&#39;, &#39;Ruben de Rond&#39;, &#39;Rubi Heller&#39;, &#39;Run Rivers&#39;, &#39;Ruslan Aschaulov&#39;, &#39;Russell G&#39;, &#39;Russo&#39;, &#39;Rya &amp; Manida&#39;, &#39;Ryan Mendoza&#39;, &#39;Rymania&#39;, &#39;S&amp;L&#39;, &#39;S. Sinka&#39;, &#39;S.H.O.K.K.&#39;, &#39;SDS&#39;, &#39;SECTR 24&#39;, &#39;STEEM SL&#39;, &#39;Saav&#39;, &#39;Sabanci&#39;, &#39;Sabanci &amp; Truby&#39;, &#39;Saer&#39;, &#39;Saint&#39;, &#39;Saint Rush&#39;, &#39;Sally Saifi&#39;, &#39;Sam Knight&#39;, &#39;Sami S&#39;, &#39;San Antonio Harbour&#39;, &#39;Sander Playmo&#39;, &#39;Sander Van Dien&#39;, &#39;Sandra Wagner&#39;, &#39;Santoz&#39;, &#39;Sascha Milde&#39;, &#39;Sasha&#39;, &#39;Sasha August&#39;, &#39;Sasha da Link&#39;, &#39;Scarlett Quinn&#39;, &#39;Scenix&#39;, &#39;Science Deal&#39;, &#39;Scolario&#39;, &#39;Scott Lowe&#39;, &#39;Scylla&#39;, &#39;Sean &amp; Xander&#39;, &#39;Sean Ryan&#39;, &#39;SebDell&#39;, &#39;Sebu&#39;, &#39;Second Reason&#39;, &#39;Second Way&#39;, &#39;Secret Panda Society&#39;, &#39;Seegmo&#39;, &#39;Seelo&#39;, &#39;Sekiu&#39;, &#39;Sendr&#39;, &#39;Sense Of Shiver&#39;, &#39;Sequentia Remix&#39;, &#39;Seraque&#39;, &#39;Serenade&#39;, &#39;Sergey Shabanov&#39;, &#39;Sergey Vegas&#39;, &#39;Serial Smokers&#39;, &#39;Seroya&#39;, &#39;Sesto Sento&#39;, &#39;Seth Hutton&#39;, &#39;Sevenn&#39;, &#39;Sfinx&#39;, &#39;Shahin Badar&#39;, &#39;Shakeh&#39;, &#39;Shanti People&#39;, &#39;Shanti V Deedrah&#39;, &#39;Shaun Gregory&#39;, &#39;Shedona&#39;, &#39;Shelby Merry&#39;, &#39;Sheldon&#39;, &#39;Sherry Flavour&#39;, &#39;Shingo Nakamura&#39;, &#39;Shy Brothers&#39;, &#39;Sian Evans&#39;, &#39;Sian Kosheen&#39;, &#39;Siberian Sun&#39;, &#39;Sibicky&#39;, &#39;Side Effects&#39;, &#39;Sideform Suduaya&#39;, &#39;Signal Space&#39;, &#39;Silvermine&#39;, &#39;Silvester&#39;, &#39;Simadith Project&#39;, &#39;Simmons &amp; Blanc&#39;, &#39;Simon Lee&#39;, &#39;Simon Moon&#39;, &#39;Simon Pitt&#39;, &#39;Simple Art&#39;, &#39;Simply Drew&#39;, &#39;Simza&#39;, &#39;Sion Rae&#39;, &#39;Sirocco&#39;, &#39;Skehan&#39;, &#39;Sky Sound&#39;, &#39;Skye&#39;, &#39;Skyler Stonestreet&#39;, &#39;Slip Friction&#39;, &#39;Slusnik Luna&#39;, &#39;Smallow&#39;, &#39;Smart Apes&#39;, &#39;Smuel&#39;, &#39;Snitker&#39;, &#39;Snowseal&#39;, &#39;Soar&#39;, &#39;Solange&#39;, &#39;Solar Kid&#39;, &#39;Solarium&#39;, &#39;Solarstone Pure&#39;, &#39;Solex&#39;, &#39;Solicitous&#39;, &#39;Solid Skill&#39;, &#39;Solid Sleep&#39;, &#39;Something Good&#39;, &#39;Sonar Methods&#39;, &#39;Soncesvit&#39;, &#39;Song and the Moon&#39;, &#39;Sonic Division&#39;, &#39;Sons&#39;, &#39;Sons Of Methuselah&#39;, &#39;Sophie Moleta&#39;, &#39;SounEmot&#39;, &#39;Soundcheck&#39;, &#39;SouthLights&#39;, &#39;Space Raven&#39;, &#39;Spara&#39;, &#39;Spencer Tarring&#39;, &#39;Spherical Bloom&#39;, &#39;Sphinx&#39;, &#39;Spoiled and Zigo&#39;, &#39;St. John vs Locust&#39;, &#39;Stacker&#39;, &#39;Stan Serkin&#39;, &#39;Stanford&#39;, &#39;Stanfour&#39;, &#39;Star Industry&#39;, &#39;Starecase&#39;, &#39;Starfighter&#39;, &#39;Starkillers&#39;, &#39;State One&#39;, &#39;State of Mind&#39;, &#39;Stefan Cambridge&#39;, &#39;Stefan Dabruck&#39;, &#39;Steff da Campo&#39;, &#39;Stellz&#39;, &#39;Stephane Badey&#39;, &#39;Stephanie Kay&#39;, &#39;Stephen Kirkwood&#39;, &#39;Stephen Ridley&#39;, &#39;Stephey&#39;, &#39;Stereo Wildlife&#39;, &#39;Steve Allan&#39;, &#39;Steve Aoki&#39;, &#39;Steve Aries&#39;, &#39;Steve Bengaln&#39;, &#39;Steve Birch&#39;, &#39;Steve Forte Rio&#39;, &#39;Steve Haines&#39;, &#39;Steve Morley&#39;, &#39;Steven Brooks&#39;, &#39;Steven De Sar&#39;, &#39;Steven Force&#39;, &#39;Stimulator&#39;, &#39;Stoneface&#39;, &#39;Stoneless&#39;, &#39;Straight Up&#39;, &#39;Stream Noise&#39;, &#39;Street Punk&#39;, &#39;Stuart Millar&#39;, &#39;Stuart Trainer&#39;, &#39;Stvn&#39;, &#39;Stylo&#39;, &#39;Subimpact&#39;, &#39;Subversion&#39;, &#39;Sultan &amp; Sheperd&#39;, &#39;Sun Brothers&#39;, &#39;Sun State&#39;, &#39;Sunbrothers&#39;, &#39;Suncore&#39;, &#39;Suncrusaders&#39;, &#39;Sunday 5pm&#39;, &#39;Sunleed&#39;, &#39;Sunlight Project&#39;, &#39;Sunset Slave&#39;, &#39;Super8 &amp; DJ Tab&#39;, &#39;Supuer&#39;, &#39;Swanky Tunes&#39;, &#39;Swift&#39;, &#39;Sykamore&#39;, &#39;Sylvi&#39;, &#39;Symbolic&#39;, &#39;Symon &amp; Jay&#39;, &#39;Syndica&#39;, &#39;Syndique&#39;, &#39;System Nipel&#39;, &#39;Systembreaker&#39;, &#39;T.h.&#39;, &#39;TATA1&#39;, &#39;TEKNO&#39;, &#39;THNK&#39;, &#39;Tabasco Bob&#39;, &#39;Tadi &amp; Nv&#39;, &#39;Taiko&#39;, &#39;Taival&#39;, &#39;Tales Of Life&#39;, &#39;Tamra&#39;, &#39;Tangle &amp; Mateusz&#39;, &#39;Tania Mann&#39;, &#39;Tara Louise&#39;, &#39;Taranhawk&#39;, &#39;Tasadi&#39;, &#39;Tasso&#39;, &#39;Taucher&#39;, &#39;Taylor&#39;, &#39;Team Bastian&#39;, &#39;Tee-Ex&#39;, &#39;Tekno&#39;, &#39;Temperheart&#39;, &#39;Tensteps&#39;, &#39;Terminal&#39;, &#39;Terracotta Army&#39;, &#39;Terry Gaters&#39;, &#39;Tetarise&#39;, &#39;Tetraflux&#39;, &#39;Tetrazone&#39;, &#39;The A&amp;N Project&#39;, &#39;The Antipodes&#39;, &#39;The Ashk One&#39;, &#39;The Atari Babies&#39;, &#39;The Avains&#39;, &#39;The Chill Factor&#39;, &#39;The Conductor &amp; The Cowboy&#39;, &#39;The Delta Rock Duo&#39;, &#39;The Doppler Effect&#39;, &#39;The Enlightment&#39;, &#39;The Inheritors&#39;, &#39;The Midnight&#39;, &#39;The Nasty Boyz&#39;, &#39;The Orange&#39;, &#39;The Royalties STHLM&#39;, &#39;The Second Phase&#39;, &#39;The Spacelovers&#39;, &#39;The Spanish Armada&#39;, &#39;The Technicians&#39;, &#39;The Tribute&#39;, &#39;The Veil Kings&#39;, &#39;The WLT&#39;, &#39;Theo&#39;, &#39;Therese&#39;, &#39;Theresia Svensson&#39;, &#39;Thick As Thieves&#39;, &#34;Thomas Datt&#39;s&#34;, &#39;Thomas Kelle&#39;, &#39;Thomas Knight&#39;, &#39;Thomas Newson&#39;, &#39;Thomas Orlando&#39;, &#39;Thomas Sagstad&#39;, &#39;Thomas Schwartz&#39;, &#39;Thomas T&#39;, &#39;Thomas T.&#39;, &#39;Thomas Vink&#39;, &#39;Thoneick&#39;, &#39;Thorisson&#39;, &#39;Three Drives On A Vinyl&#39;, &#39;Tiffany Johnston&#39;, &#39;Tilt&#39;, &#39;Tim &amp; Misjah&#39;, &#39;Tim Besamusca&#39;, &#39;Tim Briggs&#39;, &#39;Tim Preijers&#39;, &#39;Tim White&#39;, &#39;Timelock&#39;, &#39;Timmo Hendriks&#39;, &#39;Timmus&#39;, &#39;Timo Vaittinen&#39;, &#39;Timur Shafiev&#39;, &#39;Timur Shafiey&#39;, &#39;Tobi Atkins&#39;, &#39;Tolga Uzulmez&#39;, &#39;Toltel&#39;, &#39;Tom Glide&#39;, &#39;Tom Porcell&#39;, &#39;Tom Stronghold&#39;, &#39;Tom Tyler&#39;, &#39;Tomahawk&#39;, &#39;Tommy Baynen&#39;, &#39;Tommy Conway&#39;, &#39;Torio&#39;, &#39;Tour de Trance&#39;, &#39;Trance Reserve&#39;, &#39;TranceEye&#39;, &#39;Tranceforce&#39;, &#39;Transa&#39;, &#39;Transwave&#39;, &#39;Treadstone&#39;, &#39;Trent McDermott&#39;, &#39;Tribal Point&#39;, &#39;Tricia McTeagu&#39;, &#39;Trilucid&#39;, &#39;Trine&#39;, &#39;Triple Seven&#39;, &#39;Triqz&#39;, &#39;Tristan&#39;, &#39;Tropical Groove&#39;, &#39;Truewave&#39;, &#39;Tsukerman&#39;, &#39;Tube &amp; Miller&#39;, &#39;Twilight&#39;, &#39;Tygris&#39;, &#39;U-Jeen&#39;, &#39;U-Turn&#39;, &#39;UMEK&#39;, &#34;Uberjak&#39;d&#34;, &#39;Uli Poeppelbaum&#39;, &#39;Unconditional&#39;, &#39;Underdown&#39;, &#39;Underwater&#39;, &#39;Universal Sense&#39;, &#39;Unknown Source&#39;, &#39;Unseen Dimensions&#39;, &#39;V-One&#39;, &#39;Vada&#39;, &#39;Vadik&#39;, &#39;Valhalla&#39;, &#39;Van Der Vleuten&#39;, &#39;Van Dresen&#39;, &#39;Van Eyden&#39;, &#39;Varsente&#39;, &#39;Vascotia&#39;, &#39;Vector 7&#39;, &#39;Vegaro&#39;, &#39;Vegas&#39;, &#39;Vegas Baby&#39;, &#39;Vehemence&#39;, &#39;Veit&#39;, &#39;Velden&#39;, &#39;Velvetine&#39;, &#39;Venice&#39;, &#39;Vercitti&#39;, &#39;Verny&#39;, &#39;Vertel&#39;, &#39;Vertruda&#39;, &#39;Vicky Fee&#39;, &#39;Victoria Duffield&#39;, &#39;Vince Schuld&#39;, &#39;Vincent Voort&#39;, &#39;Vir2l Vision&#39;, &#39;Visionaire&#39;, &#39;Visior&#39;, &#39;Vlad Captivity&#39;, &#39;Vol Deeman&#39;, &#39;Volition&#39;, &#39;Voolgarizm&#39;, &#39;Voytech&#39;, &#39;V√∂k&#39;, &#39;WARRIORS&#39;, &#39;Walden&#39;, &#39;Walsh&#39;, &#39;Warren Adam&#39;, &#39;Waterspark&#39;, &#39;Wayne Jackson&#39;, &#39;We Are Loud&#39;, &#39;WeAreAlien&#39;, &#39;WeareD&#39;, &#39;Wellenrausch&#39;, &#39;Westlake&#39;, &#39;What So Not&#39;, &#39;Whitelight&#39;, &#39;Wiegel&#39;, &#39;WildOnes&#39;, &#39;Wildstylez&#39;, &#39;Will Watson&#39;, &#39;Win and Woo&#39;, &#39;Winona Oak&#39;, &#39;With The Winds&#39;, &#39;Within Temptation&#39;, &#39;Wonder Element&#39;, &#39;Woodshokk&#39;, &#39;X-Ploarations&#39;, &#39;XIRA&#39;, &#39;Xanwow&#39;, &#39;Xijaro&#39;, &#39;Xspective Sense&#39;, &#39;Yanave&#39;, &#39;Yotto&#39;, &#39;Young Rebels&#39;, &#39;Yourdee&#39;, &#39;Yuna-X&#39;, &#39;ZOYA&#39;, &#39;Zach Zlov&#39;, &#39;Zack Evans&#39;, &#39;Zack Martino&#39;, &#39;Zehavi &amp; Rand&#39;, &#39;Zein Hallak&#39;, &#39;Ziger&#39;, &#39;Zigi&#39;, &#39;Ziki&#39;, &#39;Zinkibaru&#39;, &#39;Zinou&#39;, &#39;Zyce&#39;, &#39;brando&#39;, &#39;i&#39;, &#39;tAudrey Gallagher&#39;, &#39;tyDi &amp; Dennis Sheperd&#39;] . Highlights include Steve Aoki and What So Not, among others. Again, this is based on how artists are reported in Spotify and as such is not entirely accurate. In the above we see &#39;tAudrey Gallagher&#39; and &quot;Thomas Datt&#39;s&quot;, both typos, report as separate from their namesake. . Summary . In conclusion, across the current (as of writing) 960 episodes of A State of Trance... . 17,000+ total tracks have been played | 4,000+ unique artists have been featured | 1,200+ tracks produced by Armin van Buuren in some form or another have been played | 1,700+ artists (43%) have been played exactly once | . And there we have it! There&#39;s plenty more to investigate, stay tuned.. .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/bpm/2020/05/02/artist-plays.html",
            "relUrl": "/asot/bpm/2020/05/02/artist-plays.html",
            "date": " ‚Ä¢ May 2, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Average Episode BPM",
            "content": "Introduction . Previously on &quot;How has A State of Trance changed over time?&quot; we poked the Spotify Web API and returned with every episode of A State of Trance. In this post, we&#39;ll examine how the show&#39;s BPM has changed over time. . On Averages . First, some housekeeping items. . In the &quot;Methodology&quot; post we learned Spotify&#39;s catalogue of A State of Trance, while it seems to contain every episode, does not have every track in some episodes. . Due to the nature of averages, this will cause our calculations to be skewed somewhat. Filling in the blanks is left as an exercise for the reader. . Calculating . Let&#39;s find the average BPM of each episode and graph it over time. . We&#39;ll ask Spotify for the BPM of every track in an episode, add it all up, and divide by the number of tracks - removing the voiceovers and interludes of course! For the first 10 episodes, this looks like: . episode_avg_bpm = [] for episode in episodes[:10]: try: episode_bpm = 0 tracks_counted = 0 for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a atate of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: episode_bpm += sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;] tracks_counted += 1 avg = episode_bpm/tracks_counted print(episode[&#39;name&#39;], avg) episode_avg_bpm.append(avg) except: pass . A State Of Trance Episode 000 135.77875 A State Of Trance Episode 001 138.86957142857142 A State Of Trance Episode 002 135.95900000000003 A State Of Trance Episode 003 135.295 A State Of Trance Episode 004 137.3078 A State Of Trance Episode 005 137.122875 A State Of Trance Episode 006 136.12875 A State Of Trance Episode 007 137.459125 A State Of Trance Episode 008 136.409 A State Of Trance Episode 009 138.58033333333333 . Rinse and repeat for 950+ episodes. Grab a tea or coffee, this could take a bit! . episode_avg_bpm = [] for episode in episodes: try: episode_bpm = 0 tracks_counted = 0 for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: episode_bpm += sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;] tracks_counted += 1 avg = episode_bpm/tracks_counted episode_avg_bpm.append(avg) except: pass . Instead of printing this, let&#39;s throw it into a quick Altair graph: . x = np.arange(len(episode_avg_bpm)) source = pd.DataFrame({ &#39;episode&#39;: x, &#39;avg bpm&#39;: np.array(episode_avg_bpm) }) alt.Chart(source).mark_line().encode( alt.X(&#39;episode&#39;), alt.Y(&#39;avg bpm&#39;, scale=alt.Scale(domain=(120, 150))), ).properties( title=&quot;A State of Trance - Average BPM of episode&quot; ) . Episode 057 tops the charts at an impressive 148 BPM, why? Looking at the tracklist .. . &quot;&quot;&quot; Artist: Armin van Buuren ASOT Radio Album: A State Of Trance Episode 057 Album link: https://open.spotify.com/album/56qM5Y21wbvCW9l5GiAiaV Album ID: 56qM5Y21wbvCW9l5GiAiaV &quot;&quot;&quot; episode_bpm = 0 tracks_counted = 0 for track in sp.album_tracks(&#39;56qM5Y21wbvCW9l5GiAiaV&#39;)[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: print(track[&#39;artists&#39;][0][&#39;name&#39;], &#39;-&#39;, track[&#39;name&#39;], sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;]) episode_bpm += sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;] tracks_counted += 1 print(&quot;Episode average: &quot;, episode_bpm/tracks_counted) . Pulser - Cloudwalking [ASOT 057] - Beatpusher Remix 141.61 Gouryella - Ligaya [ASOT 057] - Original Mix 141.784 Ti√´sto - Obsession [ASOT 057] - Original Mix 136.377 UMEK - Gatex [ASOT 057] - Original Mix 184.848 Cygnus X - Positron [ASOT 057] - Marco V Remix 139.264 Episode average: 148.7766 . UMEK - Gatex (Original Mix) clocks in at a whopping 184 BPM, drastically raising the average of this episode. Beatport reports it at 136, something&#39;s not right.. . Results . Finally, for fun, we can draw a line at 138 BPM to compare. . x = np.arange(len(episode_avg_bpm)) source = pd.DataFrame({ &#39;episode&#39;: x, &#39;avg bpm&#39;: np.array(episode_avg_bpm) }) source[&#39;138&#39;] = 138 base = alt.Chart(source).mark_line().encode( alt.X(&#39;episode&#39;), alt.Y(&#39;avg bpm&#39;, scale=alt.Scale(domain=(120, 150))), ).properties( title=&quot;A State of Trance - Average BPM of episode&quot; ) rule = alt.Chart(source).mark_rule(color=&#39;red&#39;).encode( y=&#39;138&#39; ) base + rule . And there we have it! There&#39;s plenty more to investigate beyond BPM, stay tuned.. .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/bpm/2020/04/28/avg-bpm.html",
            "relUrl": "/asot/bpm/2020/04/28/avg-bpm.html",
            "date": " ‚Ä¢ Apr 28, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "Methodology",
            "content": "The Spotify Web API can return over a dozen audio features for a track, notably tempo - &quot;The overall estimated tempo of a track in beats per minute (BPM).&quot; . Given a Spotify ID, Spotipy&#39;s audio_features method can be called as follows: . &quot;&quot;&quot; Artist: Above &amp; Beyond, Richard Bedford Track: Sun &amp; Moon Track link: https://open.spotify.com/track/2CG1FmeprsyjgHIPNMYCf4 Track ID: 2CG1FmeprsyjgHIPNMYCf4 &quot;&quot;&quot; sun_and_moon_id = &#39;2CG1FmeprsyjgHIPNMYCf4&#39; audio_features = sp.audio_features(sun_and_moon_id) print(json.dumps(audio_features, indent=2)) . [ { &#34;danceability&#34;: 0.691, &#34;energy&#34;: 0.522, &#34;key&#34;: 6, &#34;loudness&#34;: -8.024, &#34;mode&#34;: 0, &#34;speechiness&#34;: 0.0908, &#34;acousticness&#34;: 0.0216, &#34;instrumentalness&#34;: 0.0141, &#34;liveness&#34;: 0.125, &#34;valence&#34;: 0.187, &#34;tempo&#34;: 133.995, &#34;type&#34;: &#34;audio_features&#34;, &#34;id&#34;: &#34;2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;uri&#34;: &#34;spotify:track:2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;track_href&#34;: &#34;https://api.spotify.com/v1/tracks/2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;analysis_url&#34;: &#34;https://api.spotify.com/v1/audio-analysis/2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;duration_ms&#34;: 326267, &#34;time_signature&#34;: 4 } ] . Nice! Looks like the &quot;tempo&quot;, or BPM, of this track is around 133. Let&#39;s continue. . Conveniently, the entire back catalogue of A State of Trance - 950+ episodes - has been uploaded to Spotify under the artist &quot;Armin van Buuren ASOT Radio&quot;. Spotipy&#39;s artist_albums method can list them for us, courtesy spotipy/examples/artist_albums.py: . &quot;&quot;&quot; Artist: Armin van Buuren ASOT Radio Artist link: https://open.spotify.com/artist/25mFVpuABa9GkGcj9eOPce Artist ID: 25mFVpuABa9GkGcj9eOPce &quot;&quot;&quot; asot_radio_id = &#39;25mFVpuABa9GkGcj9eOPce&#39; albums = [] results = sp.artist_albums(asot_radio_id, album_type=&#39;album&#39;) albums.extend(results[&#39;items&#39;]) while results[&#39;next&#39;]: results = sp.next(results) albums.extend(results[&#39;items&#39;]) seen = set() # to avoid dups for album in albums: name = album[&#39;name&#39;] if name not in seen: seen.add(name) albums.sort(key=lambda x: x[&#39;release_date&#39;]) # Sort by release date . Cool, our list albums should now contain every episode of A State of Trance! Let&#39;s take a quick look.. . # Print the names of the first 10 episodes for album in albums[:10]: print(album[&#39;name&#39;]) . A State Of Trance Episode 001 A State Of Trance Episode 003 A State Of Trance Episode 004 A State Of Trance Episode 005 A State Of Trance Episode 007 A State Of Trance Episode 008 A State Of Trance Episode 009 A State Of Trance Episode 010 A State Of Trance Episode 012 A State Of Trance Episode 015 . Hm, aren&#39;t we missing a few? . # How many episodes? len(albums) . 935 . For some reason 25 early episodes are classified as &quot;Singles and EPs&quot;. Let&#39;s grab those as well, and add them to the list. . &quot;&quot;&quot; Artist: Armin van Buuren ASOT Radio Artist link: https://open.spotify.com/artist/25mFVpuABa9GkGcj9eOPce Artist ID: 25mFVpuABa9GkGcj9eOPce &quot;&quot;&quot; asot_radio_id = &#39;25mFVpuABa9GkGcj9eOPce&#39; singles = [] results = sp.artist_albums(asot_radio_id, album_type=&#39;single&#39;) singles.extend(results[&#39;items&#39;]) while results[&#39;next&#39;]: results = sp.next(results) singles.extend(results[&#39;items&#39;]) seen = set() # to avoid dups for single in singles: name = single[&#39;name&#39;] if name not in seen: seen.add(name) episodes = singles + albums episodes.sort(key=lambda x: x[&#39;release_date&#39;]) # Sort by release date for episode in episodes[:10]: print(episode[&#39;name&#39;]) . A State Of Trance Episode 000 A State Of Trance Episode 001 A State Of Trance Episode 002 A State Of Trance Episode 003 A State Of Trance Episode 004 A State Of Trance Episode 005 A State Of Trance Episode 006 A State Of Trance Episode 007 A State Of Trance Episode 008 A State Of Trance Episode 009 . Nice! . # Now how many episodes? len(episodes) . 960 . Great, that&#39;s every available episode as of writing. Let&#39;s see what we can do with all this, starting with a tracklist courtesy of Spotipy&#39;s album_tracks method: . # Print every available Artist - Track from ASOT 001 for track in sp.album_tracks(episodes[1][&#39;uri&#39;])[&#39;items&#39;]: print(track[&#39;artists&#39;][0][&#39;name&#39;], &#39;-&#39;, track[&#39;name&#39;]) . Armin van Buuren - A State Of Trance [ASOT 001] - Intro Liquid DJ Team - Liquidation [ASOT 001] - Marco V Mix The Ultimate Seduction - The Ultimate Seduction [ASOT 001] **ASOT Radio Classic** - Original Mix System F - Exhale [ASOT 001] - Ferry Corsten &amp; Armin van Buuren New Mix Rising Star - Clear Blue Moon [ASOT 001] - Original Mix Ralphie B - Massive [ASOT 001] - Original Mix Rank 1 - Such is Life [ASOT 001] - Original Mix Armin van Buuren - Blue Fear [ASOT 001] - Original Mix Armin van Buuren - A State Of Trance [ASOT 001] - Outro . Seems most of the early episodes are missing a bunch of tracks unfortunately, A State of Trance&#39;s website reports twice as many tracks in this episode and we&#39;ll want to remove the intro and outro as well. . Looking at a more recent episode: . # Print every available Artist - Track from ASOT 950 - Part 2 for track in sp.album_tracks(episodes[945][&#39;uri&#39;])[&#39;items&#39;]: track_artist = track[&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] print(track_artist, &#39;-&#39;, track[&#39;name&#39;]) . Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Intro Armin van Buuren - Let The Music Guide You (ASOT 950 Anthem) [ASOT 950 - Part 1] Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Coming Up, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Service For Dreamers Special, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - ASOT 950 Event, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Alana Katherine &amp; Reanna Parsons from Canada, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Alana Katherine &amp; Reanna Parsons from Canada, Pt. 2 Tritonal &amp; Jeza - I Can Breathe (ASOT 950 - Part 1) - Tritonal Club Mix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Codrin Lustin from Romania Super8 &amp; Tab - Nino (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Jaime Oliveira from Portugal Mark Knight &amp; D. Ramirez &amp; Underworld &amp; Armin van Buuren - Downpipe (ASOT 950 - Part 1) - Armin van Buuren Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by James Holloway from the UK Oliver Smith - Chordplay (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Ilan Bluestone &amp; Maor Levi, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Ilan Bluestone &amp; Maor Levi, Pt. 2 Armin van Buuren &amp; Sharon Den Adel &amp; Ilan Bluestone &amp; Maor Levi - In And Out Of Love (ASOT 950 - Part 1) - ilan Bluestone &amp; Maor Levi Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Raymundo from Canada Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Coming Up, Pt. 2 Assaf &amp; Cassandra Grey - All Of You (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Rafael from The Philippines Jorn Van Deynhoven - New Horizons (A State Of Trance 650 Anthem) [ASOT 950 - Part 1] Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Michiel &amp; Veronique from The Netherlands Ferry Corsten &amp; Betsie Larkin - Made Of Love (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Pedro Soussa from Portugal, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Pedro Soussa from Portugal, Pt. 2 Eco - A Million Sounds, A Thousand Smiles (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Edwin and Susana from Canada Dennis Sheperd &amp; Cold Blue &amp; Ana Criado - Fallen Angel (ASOT 950 - Part 1) - Dennis Sheperd Club Mix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Abdul Rahman from Canada Omnia &amp; Everything By Electricity - Bones (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Thank You! Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Track Recap, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Kyle Assue from Trinidad and Tobago, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Kyle Assue from Trinidad and Tobago, Pt. 2 Armin van Buuren - The Train (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Track Recap, Pt. 2 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Stay Tuned For More Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Maxim from Germany Armin van Buuren &amp; Shapov - The Last Dancer (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Mauricio from Brazil HALIENE &amp; Ruben de Ronde - Dream In Color (ASOT 950 - Part 1) - Ruben de Ronde Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Tita from Canada Armin van Buuren &amp; Avian Grays &amp; Jordan Shaw - Something Real (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Mr. and Mrs. ReOrder from Czech Republic Above &amp; Beyond &amp; Richard Bedford - Sun &amp; Moon (ASOT 950 - Part 1) - Club Mix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Jeffrey from the USA Armin van Buuren &amp; Fiora &amp; Beat Service - Waiting For The Night (ASOT 950 - Part 1) - Beat Service Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Damian Panek from Poland Shogun - Laputa (ASOT 950 - Part 1) . The more recent episodes feature a Spotify exclusive - voiceover interludes! Seems they all contain &quot;A State of Trance&quot; though, same with the regular intros and outros. . Without them: . # Print every available Artist - Track from ASOT 950 - Part 2 (actual songs only) episode_tracks = sp.album_tracks(episodes[945][&#39;uri&#39;])[&#39;items&#39;] pruned_tracks = [] for track in episode_tracks: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: pruned_tracks.append(track) track_artist = track[&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] print(track_artist, &#39;-&#39;, track[&#39;name&#39;]) . Armin van Buuren - Let The Music Guide You (ASOT 950 Anthem) [ASOT 950 - Part 1] Tritonal &amp; Jeza - I Can Breathe (ASOT 950 - Part 1) - Tritonal Club Mix Super8 &amp; Tab - Nino (ASOT 950 - Part 1) Mark Knight &amp; D. Ramirez &amp; Underworld &amp; Armin van Buuren - Downpipe (ASOT 950 - Part 1) - Armin van Buuren Remix Oliver Smith - Chordplay (ASOT 950 - Part 1) Armin van Buuren &amp; Sharon Den Adel &amp; Ilan Bluestone &amp; Maor Levi - In And Out Of Love (ASOT 950 - Part 1) - ilan Bluestone &amp; Maor Levi Remix Assaf &amp; Cassandra Grey - All Of You (ASOT 950 - Part 1) Ferry Corsten &amp; Betsie Larkin - Made Of Love (ASOT 950 - Part 1) Eco - A Million Sounds, A Thousand Smiles (ASOT 950 - Part 1) Dennis Sheperd &amp; Cold Blue &amp; Ana Criado - Fallen Angel (ASOT 950 - Part 1) - Dennis Sheperd Club Mix Omnia &amp; Everything By Electricity - Bones (ASOT 950 - Part 1) Armin van Buuren - The Train (ASOT 950 - Part 1) Armin van Buuren &amp; Shapov - The Last Dancer (ASOT 950 - Part 1) HALIENE &amp; Ruben de Ronde - Dream In Color (ASOT 950 - Part 1) - Ruben de Ronde Remix Armin van Buuren &amp; Avian Grays &amp; Jordan Shaw - Something Real (ASOT 950 - Part 1) Above &amp; Beyond &amp; Richard Bedford - Sun &amp; Moon (ASOT 950 - Part 1) - Club Mix Armin van Buuren &amp; Fiora &amp; Beat Service - Waiting For The Night (ASOT 950 - Part 1) - Beat Service Remix Shogun - Laputa (ASOT 950 - Part 1) . Much better! Finally, for fun, let&#39;s track this episode&#39;s BPM over time using some visualization libraries: . import altair as alt import numpy as np import pandas as pd . bpm = [] for track in pruned_tracks: bpm.append(sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;]) x = np.arange(len(pruned_tracks)) source = pd.DataFrame({ &#39;track&#39;: x, &#39;bpm&#39;: np.array(bpm) }) alt.Chart(source).mark_line().encode( alt.X(&#39;track&#39;), alt.Y(&#39;bpm&#39;, scale=alt.Scale(domain=(120, 150))), ).properties( title=&quot;ASOT 950 Part 2 - BPM of track&quot; ) . Not great, but it gets the point across. . Now, let&#39;s get exploring! .. .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/bpm/2020/04/27/methodology.html",
            "relUrl": "/asot/bpm/2020/04/27/methodology.html",
            "date": " ‚Ä¢ Apr 27, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "How has A State of Trance changed over time? . I‚Äôm not a coder, a data scientist, or a DJ. But with nothing better to do, I set out to answer this question using Jupyter, FastPages, and the Spotify Web API ‚Ä¶ . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats.¬†&#8617; . |",
          "url": "https://scottbrenner.github.io/asot-jupyter/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ ‚Äúsitemap.xml‚Äù | absolute_url }} | .",
          "url": "https://scottbrenner.github.io/asot-jupyter/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}