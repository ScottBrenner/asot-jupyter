{
  
    
        "post0": {
            "title": "Average Episode BPM",
            "content": "Introduction . Previously on &quot;How has A State of Trance changed over time?&quot; we poked the Spotify Web API and returned with every episode of A State of Trance. In this post, we&#39;ll examine how the show&#39;s BPM has changed over time. . On Averages . First, some housekeeping items. . In the &quot;Methodology&quot; post we learned Spotify&#39;s catalogue of A State of Trance, while it seems to contain every episode, does not have every track in some episodes. . Due to the nature of averages, this will cause our calculations to be skewed somewhat. Filling in the blanks is left as an exercise for the reader. . Calculating . Let&#39;s find the average BPM of each episode and graph it over time. . We&#39;ll ask Spotify for the BPM of every track in an episode, add it all up, and divide by the number of tracks - removing the voiceovers and interludes of course! For the first 10 episodes, this looks like: . episode_avg_bpm = [] for episode in episodes[:10]: try: episode_bpm = 0 tracks_counted = 0 for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a atate of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: episode_bpm += sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;] tracks_counted += 1 avg = episode_bpm/tracks_counted print(episode[&#39;name&#39;], avg) episode_avg_bpm.append(avg) except: pass . A State Of Trance Episode 000 135.77875 A State Of Trance Episode 001 138.86957142857142 A State Of Trance Episode 002 135.95900000000003 A State Of Trance Episode 003 135.295 A State Of Trance Episode 004 137.3078 A State Of Trance Episode 005 137.122875 A State Of Trance Episode 006 136.12875 A State Of Trance Episode 007 137.459125 A State Of Trance Episode 008 136.409 A State Of Trance Episode 009 138.58033333333333 . Rinse and repeat for 950+ episodes. Grab a tea or coffee, this could take a bit! . episode_avg_bpm = [] for episode in episodes: try: episode_bpm = 0 tracks_counted = 0 for track in sp.album_tracks(episode[&#39;uri&#39;])[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: episode_bpm += sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;] tracks_counted += 1 avg = episode_bpm/tracks_counted episode_avg_bpm.append(avg) except: pass . Instead of printing this, let&#39;s throw it into a quick Altair graph: . x = np.arange(len(episode_avg_bpm)) source = pd.DataFrame({ &#39;episode&#39;: x, &#39;avg bpm&#39;: np.array(episode_avg_bpm) }) alt.Chart(source).mark_line().encode( alt.X(&#39;episode&#39;), alt.Y(&#39;avg bpm&#39;, scale=alt.Scale(domain=(120, 150))), ).properties( title=&quot;A State of Trance - Average BPM of episode&quot; ) . Episode 057 tops the charts at an impressive 148 BPM, why? Looking at the tracklist .. . &quot;&quot;&quot; Artist: Armin van Buuren ASOT Radio Album: A State Of Trance Episode 057 Album link: https://open.spotify.com/album/56qM5Y21wbvCW9l5GiAiaV Album ID: 56qM5Y21wbvCW9l5GiAiaV &quot;&quot;&quot; episode_bpm = 0 tracks_counted = 0 for track in sp.album_tracks(&#39;56qM5Y21wbvCW9l5GiAiaV&#39;)[&#39;items&#39;]: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: print(track[&#39;artists&#39;][0][&#39;name&#39;], &#39;-&#39;, track[&#39;name&#39;], sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;]) episode_bpm += sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;] tracks_counted += 1 print(&quot;Episode average: &quot;, episode_bpm/tracks_counted) . Pulser - Cloudwalking [ASOT 057] - Beatpusher Remix 141.61 Gouryella - Ligaya [ASOT 057] - Original Mix 141.784 Tiësto - Obsession [ASOT 057] - Original Mix 136.377 UMEK - Gatex [ASOT 057] - Original Mix 184.848 Cygnus X - Positron [ASOT 057] - Marco V Remix 139.264 Episode average: 148.7766 . UMEK - Gatex (Original Mix) clocks in at a whopping 184 BPM, drastically raising the average of this episode. Beatport reports it at 136, something&#39;s not right.. . Results . Finally, for fun, we can draw a line at 138 BPM to compare. . x = np.arange(len(episode_avg_bpm)) source = pd.DataFrame({ &#39;episode&#39;: x, &#39;avg bpm&#39;: np.array(episode_avg_bpm) }) source[&#39;138&#39;] = 138 base = alt.Chart(source).mark_line().encode( alt.X(&#39;episode&#39;), alt.Y(&#39;avg bpm&#39;, scale=alt.Scale(domain=(120, 150))), ).properties( title=&quot;A State of Trance - Average BPM of episode&quot; ) rule = alt.Chart(source).mark_rule(color=&#39;red&#39;).encode( y=&#39;138&#39; ) base + rule . And there we have it! There&#39;s plenty more to investigate beyond BPM, stay tuned.. .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/bpm/2020/04/28/avg-bpm.html",
            "relUrl": "/asot/bpm/2020/04/28/avg-bpm.html",
            "date": " • Apr 28, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Methodology",
            "content": "The Spotify Web API can return over a dozen audio features for a track, notably tempo - &quot;The overall estimated tempo of a track in beats per minute (BPM).&quot; . Given a Spotify ID, Spotipy&#39;s audio_features method can be called as follows: . &quot;&quot;&quot; Artist: Above &amp; Beyond, Richard Bedford Track: Sun &amp; Moon Track link: https://open.spotify.com/track/2CG1FmeprsyjgHIPNMYCf4 Track ID: 2CG1FmeprsyjgHIPNMYCf4 &quot;&quot;&quot; sun_and_moon_id = &#39;2CG1FmeprsyjgHIPNMYCf4&#39; audio_features = sp.audio_features(sun_and_moon_id) print(json.dumps(audio_features, indent=2)) . [ { &#34;danceability&#34;: 0.691, &#34;energy&#34;: 0.522, &#34;key&#34;: 6, &#34;loudness&#34;: -8.024, &#34;mode&#34;: 0, &#34;speechiness&#34;: 0.0908, &#34;acousticness&#34;: 0.0216, &#34;instrumentalness&#34;: 0.0141, &#34;liveness&#34;: 0.125, &#34;valence&#34;: 0.187, &#34;tempo&#34;: 133.995, &#34;type&#34;: &#34;audio_features&#34;, &#34;id&#34;: &#34;2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;uri&#34;: &#34;spotify:track:2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;track_href&#34;: &#34;https://api.spotify.com/v1/tracks/2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;analysis_url&#34;: &#34;https://api.spotify.com/v1/audio-analysis/2CG1FmeprsyjgHIPNMYCf4&#34;, &#34;duration_ms&#34;: 326267, &#34;time_signature&#34;: 4 } ] . Nice! Looks like the &quot;tempo&quot;, or BPM, of this track is around 133. Let&#39;s continue. . Conveniently, the entire back catalogue of A State of Trance - 950+ episodes - has been uploaded to Spotify under the artist &quot;Armin van Buuren ASOT Radio&quot;. Spotipy&#39;s artist_albums method can list them for us, courtesy spotipy/examples/artist_albums.py: . &quot;&quot;&quot; Artist: Armin van Buuren ASOT Radio Artist link: https://open.spotify.com/artist/25mFVpuABa9GkGcj9eOPce Artist ID: 25mFVpuABa9GkGcj9eOPce &quot;&quot;&quot; asot_radio_id = &#39;25mFVpuABa9GkGcj9eOPce&#39; albums = [] results = sp.artist_albums(asot_radio_id, album_type=&#39;album&#39;) albums.extend(results[&#39;items&#39;]) while results[&#39;next&#39;]: results = sp.next(results) albums.extend(results[&#39;items&#39;]) seen = set() # to avoid dups for album in albums: name = album[&#39;name&#39;] if name not in seen: seen.add(name) albums.sort(key=lambda x: x[&#39;release_date&#39;]) # Sort by release date . Cool, our list albums should now contain every episode of A State of Trance! Let&#39;s take a quick look.. . # Print the names of the first 10 episodes for album in albums[:10]: print(album[&#39;name&#39;]) . A State Of Trance Episode 001 A State Of Trance Episode 003 A State Of Trance Episode 004 A State Of Trance Episode 005 A State Of Trance Episode 007 A State Of Trance Episode 008 A State Of Trance Episode 009 A State Of Trance Episode 010 A State Of Trance Episode 012 A State Of Trance Episode 015 . Hm, aren&#39;t we missing a few? . # How many episodes? len(albums) . 935 . For some reason 25 early episodes are classified as &quot;Singles and EPs&quot;. Let&#39;s grab those as well, and add them to the list. . &quot;&quot;&quot; Artist: Armin van Buuren ASOT Radio Artist link: https://open.spotify.com/artist/25mFVpuABa9GkGcj9eOPce Artist ID: 25mFVpuABa9GkGcj9eOPce &quot;&quot;&quot; asot_radio_id = &#39;25mFVpuABa9GkGcj9eOPce&#39; singles = [] results = sp.artist_albums(asot_radio_id, album_type=&#39;single&#39;) singles.extend(results[&#39;items&#39;]) while results[&#39;next&#39;]: results = sp.next(results) singles.extend(results[&#39;items&#39;]) seen = set() # to avoid dups for single in singles: name = single[&#39;name&#39;] if name not in seen: seen.add(name) episodes = singles + albums episodes.sort(key=lambda x: x[&#39;release_date&#39;]) # Sort by release date for episode in episodes[:10]: print(episode[&#39;name&#39;]) . A State Of Trance Episode 000 A State Of Trance Episode 001 A State Of Trance Episode 002 A State Of Trance Episode 003 A State Of Trance Episode 004 A State Of Trance Episode 005 A State Of Trance Episode 006 A State Of Trance Episode 007 A State Of Trance Episode 008 A State Of Trance Episode 009 . Nice! . # Now how many episodes? len(episodes) . 960 . Great, that&#39;s every available episode as of writing. Let&#39;s see what we can do with all this, starting with a tracklist courtesy of Spotipy&#39;s album_tracks method: . # Print every available Artist - Track from ASOT 001 for track in sp.album_tracks(episodes[1][&#39;uri&#39;])[&#39;items&#39;]: print(track[&#39;artists&#39;][0][&#39;name&#39;], &#39;-&#39;, track[&#39;name&#39;]) . Armin van Buuren - A State Of Trance [ASOT 001] - Intro Liquid DJ Team - Liquidation [ASOT 001] - Marco V Mix The Ultimate Seduction - The Ultimate Seduction [ASOT 001] **ASOT Radio Classic** - Original Mix System F - Exhale [ASOT 001] - Ferry Corsten &amp; Armin van Buuren New Mix Rising Star - Clear Blue Moon [ASOT 001] - Original Mix Ralphie B - Massive [ASOT 001] - Original Mix Rank 1 - Such is Life [ASOT 001] - Original Mix Armin van Buuren - Blue Fear [ASOT 001] - Original Mix Armin van Buuren - A State Of Trance [ASOT 001] - Outro . Seems most of the early episodes are missing a bunch of tracks unfortunately, A State of Trance&#39;s website reports twice as many tracks in this episode and we&#39;ll want to remove the intro and outro as well. . Looking at a more recent episode: . # Print every available Artist - Track from ASOT 950 - Part 2 for track in sp.album_tracks(episodes[945][&#39;uri&#39;])[&#39;items&#39;]: track_artist = track[&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] print(track_artist, &#39;-&#39;, track[&#39;name&#39;]) . Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Intro Armin van Buuren - Let The Music Guide You (ASOT 950 Anthem) [ASOT 950 - Part 1] Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Coming Up, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Service For Dreamers Special, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - ASOT 950 Event, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Alana Katherine &amp; Reanna Parsons from Canada, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Alana Katherine &amp; Reanna Parsons from Canada, Pt. 2 Tritonal &amp; Jeza - I Can Breathe (ASOT 950 - Part 1) - Tritonal Club Mix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Codrin Lustin from Romania Super8 &amp; Tab - Nino (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Jaime Oliveira from Portugal Mark Knight &amp; D. Ramirez &amp; Underworld &amp; Armin van Buuren - Downpipe (ASOT 950 - Part 1) - Armin van Buuren Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by James Holloway from the UK Oliver Smith - Chordplay (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Ilan Bluestone &amp; Maor Levi, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Ilan Bluestone &amp; Maor Levi, Pt. 2 Armin van Buuren &amp; Sharon Den Adel &amp; Ilan Bluestone &amp; Maor Levi - In And Out Of Love (ASOT 950 - Part 1) - ilan Bluestone &amp; Maor Levi Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Raymundo from Canada Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Coming Up, Pt. 2 Assaf &amp; Cassandra Grey - All Of You (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Rafael from The Philippines Jorn Van Deynhoven - New Horizons (A State Of Trance 650 Anthem) [ASOT 950 - Part 1] Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Michiel &amp; Veronique from The Netherlands Ferry Corsten &amp; Betsie Larkin - Made Of Love (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Pedro Soussa from Portugal, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Pedro Soussa from Portugal, Pt. 2 Eco - A Million Sounds, A Thousand Smiles (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Edwin and Susana from Canada Dennis Sheperd &amp; Cold Blue &amp; Ana Criado - Fallen Angel (ASOT 950 - Part 1) - Dennis Sheperd Club Mix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Abdul Rahman from Canada Omnia &amp; Everything By Electricity - Bones (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Thank You! Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Track Recap, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Kyle Assue from Trinidad and Tobago, Pt. 1 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Kyle Assue from Trinidad and Tobago, Pt. 2 Armin van Buuren - The Train (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Track Recap, Pt. 2 Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Stay Tuned For More Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Maxim from Germany Armin van Buuren &amp; Shapov - The Last Dancer (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Mauricio from Brazil HALIENE &amp; Ruben de Ronde - Dream In Color (ASOT 950 - Part 1) - Ruben de Ronde Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Tita from Canada Armin van Buuren &amp; Avian Grays &amp; Jordan Shaw - Something Real (ASOT 950 - Part 1) Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Mr. and Mrs. ReOrder from Czech Republic Above &amp; Beyond &amp; Richard Bedford - Sun &amp; Moon (ASOT 950 - Part 1) - Club Mix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Jeffrey from the USA Armin van Buuren &amp; Fiora &amp; Beat Service - Waiting For The Night (ASOT 950 - Part 1) - Beat Service Remix Armin van Buuren - A State Of Trance (ASOT 950 - Part 1) - Requested by Damian Panek from Poland Shogun - Laputa (ASOT 950 - Part 1) . The more recent episodes feature a Spotify exclusive - voiceover interludes! Seems they all contain &quot;A State of Trance&quot; though, same with the regular intros and outros. . Without them: . # Print every available Artist - Track from ASOT 950 - Part 2 (actual songs only) episode_tracks = sp.album_tracks(episodes[945][&#39;uri&#39;])[&#39;items&#39;] pruned_tracks = [] for track in episode_tracks: if &quot;a state of trance&quot; in track[&#39;name&#39;].lower() or &quot;- interview&quot; in track[&#39;name&#39;].lower(): continue else: pruned_tracks.append(track) track_artist = track[&#39;artists&#39;][0][&#39;name&#39;] for artist in track[&#39;artists&#39;][1:]: track_artist += &quot; &amp; &quot; + artist[&#39;name&#39;] print(track_artist, &#39;-&#39;, track[&#39;name&#39;]) . Armin van Buuren - Let The Music Guide You (ASOT 950 Anthem) [ASOT 950 - Part 1] Tritonal &amp; Jeza - I Can Breathe (ASOT 950 - Part 1) - Tritonal Club Mix Super8 &amp; Tab - Nino (ASOT 950 - Part 1) Mark Knight &amp; D. Ramirez &amp; Underworld &amp; Armin van Buuren - Downpipe (ASOT 950 - Part 1) - Armin van Buuren Remix Oliver Smith - Chordplay (ASOT 950 - Part 1) Armin van Buuren &amp; Sharon Den Adel &amp; Ilan Bluestone &amp; Maor Levi - In And Out Of Love (ASOT 950 - Part 1) - ilan Bluestone &amp; Maor Levi Remix Assaf &amp; Cassandra Grey - All Of You (ASOT 950 - Part 1) Ferry Corsten &amp; Betsie Larkin - Made Of Love (ASOT 950 - Part 1) Eco - A Million Sounds, A Thousand Smiles (ASOT 950 - Part 1) Dennis Sheperd &amp; Cold Blue &amp; Ana Criado - Fallen Angel (ASOT 950 - Part 1) - Dennis Sheperd Club Mix Omnia &amp; Everything By Electricity - Bones (ASOT 950 - Part 1) Armin van Buuren - The Train (ASOT 950 - Part 1) Armin van Buuren &amp; Shapov - The Last Dancer (ASOT 950 - Part 1) HALIENE &amp; Ruben de Ronde - Dream In Color (ASOT 950 - Part 1) - Ruben de Ronde Remix Armin van Buuren &amp; Avian Grays &amp; Jordan Shaw - Something Real (ASOT 950 - Part 1) Above &amp; Beyond &amp; Richard Bedford - Sun &amp; Moon (ASOT 950 - Part 1) - Club Mix Armin van Buuren &amp; Fiora &amp; Beat Service - Waiting For The Night (ASOT 950 - Part 1) - Beat Service Remix Shogun - Laputa (ASOT 950 - Part 1) . Much better! Finally, for fun, let&#39;s track this episode&#39;s BPM over time using some visualization libraries: . import altair as alt import numpy as np import pandas as pd . bpm = [] for track in pruned_tracks: bpm.append(sp.audio_features(track[&#39;uri&#39;])[0][&#39;tempo&#39;]) x = np.arange(len(pruned_tracks)) source = pd.DataFrame({ &#39;track&#39;: x, &#39;bpm&#39;: np.array(bpm) }) alt.Chart(source).mark_line().encode( alt.X(&#39;track&#39;), alt.Y(&#39;bpm&#39;, scale=alt.Scale(domain=(120, 150))), ).properties( title=&quot;ASOT 950 Part 2 - BPM of track&quot; ) . Not great, but it gets the point across. . Now, let&#39;s get exploring! .. .",
            "url": "https://scottbrenner.github.io/asot-jupyter/asot/bpm/2020/04/27/methodology.html",
            "relUrl": "/asot/bpm/2020/04/27/methodology.html",
            "date": " • Apr 27, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "How has A State of Trance changed over time? . I’m not a coder, a data scientist, or a DJ. But with nothing better to do, I set out to answer this question using Jupyter, FastPages, and the Spotify Web API … . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://scottbrenner.github.io/asot-jupyter/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://scottbrenner.github.io/asot-jupyter/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}